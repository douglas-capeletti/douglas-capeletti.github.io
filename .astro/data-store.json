[["Map",1,2,9,10,330,331,463,464],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.5.3","content-config-digest","1c266f16260f948a","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://developingnotes.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":true,\"port\":4000,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","notes",["Map",11,12,32,33,89,90,145,146,193,194,289,290],"observability",{"id":11,"data":13,"filePath":20,"digest":21,"rendered":22},{"title":14,"pubDate":15,"hero":16,"tags":17},"Observabilidade",["Date","2025-01-31T00:00:00.000Z"],"/images/observability.webp",[18,11,19],"draft","microservices","src/content/notes/observability.md","5a28b43560b5cc5e",{"html":23,"metadata":24},"",{"headings":25,"localImagePaths":26,"remoteImagePaths":27,"frontmatter":28,"imagePaths":31},[],[],[],{"title":14,"pubDate":29,"hero":16,"tags":30},"2025-01-31",[18,11,19],[],"software-architecture-fundamentals",{"id":32,"data":34,"body":41,"filePath":42,"digest":43,"rendered":44},{"title":35,"pubDate":36,"hero":37,"tags":38},"Fundamentos de arquitetura de software",["Date","2024-10-17T00:00:00.000Z"],"/images/C4.webp",[18,39,40],"architecture","fundamentals","## Tipos de arquiteto\r\n\r\n- Tecnológico\r\n  - Expert em uma tecnologia específica\r\n  - Grau de profundidade extremo\r\n    - Arquiteto AWS, Elastic, Java, DB (dba), SAP\r\n- Corporativo\r\n  - Avalia o impacto estratégico do software organização\r\n    - Vendors, tecnologias, custos\r\n  - Planejamento de implantações\r\n    - Softwares core da organização\r\n    - Migrações\r\n- Solução\r\n  - Ponte entre negócios e software\r\n  - Transcrição de requisitos e soluções\r\n  - Desenhos arquiteturais\r\n  - Análise de impactos comercias nas escolhas de tecnologia\r\n  - Participa mais do processo comercial, entende da solução, podendo ajudar na venda\r\n- Software\r\n  - Faz parte do processo de engenharia do software\r\n  - Mais baixo nível (próximo do código) do que o arquiteto de solução\r\n  - Afeta a estrutura organizacional\r\n    - Formação de times\r\n    - [Lei de conway](/shards/conways-law)\r\n    - \"É a organização fundamental de um software e seus componentes, suas relações, seu ambiente, bem como os princípios que guiam seu design e evolução\" [(IEEE Standard 1471)](https://en.wikipedia.org/wiki/IEEE_1471)\r\n  - Como transformar um requisito de negócio em arquitetura de aplicação\r\n  - Orquestra desenvolvedores e experts de domínio\r\n  - Entendimento profundo de conceitos e modelos arquiteturais\r\n  - Auxilia nos momentos de crise\r\n  - Reforça boas práticas (visão arquitetural de baixo nível)\r\n  - Code reviews\r\n  - Papel comumente exercido por tech-leads ou sêniores sem necessariamente a atribuição de cargo\r\n  - Pode ser uma área dentro da empresa, sem necessariamente sem uma posição\r\n\r\n## Importância de aprender arquitetura de software\r\n\r\n- Habilidade de entender a visão macro e micro dos softwares da empresa\r\n- Entender mais possibilidades de resolutividade de um problema\r\n- Habilidade de pensamento ao longo prazo e sustentabilidade de um software\r\n- Melhor entendimento de boas práticas\r\n- Clareza no impacto do software na organização\r\n- Mais segurança na tomada de decisões\r\n\r\n## Arquitetura VS Design\r\n\r\n- Arquitetura - Escopo Global (alto nível)\r\n  - Interação entre os componentes\r\n  - Abstrações\r\n- Design - Escopo local\r\n  - Uso de padrões\r\n  - Melhores prática de código\r\n\r\n## Sustentabilidade de software\r\n\r\n- Desenvolver software é caro\r\n  - Times de desenvolvimento e infraestrutura\r\n- Software resolve uma \"dor\"\r\n  - Um software que não resolve problema, não faz sentido\r\n- Software precisa se pagar ao longo do tempo\r\n  - O valor gerado a longo prazo deve ser mais que os custos do projeto\r\n- Precisa acompanhar a evolução do negócio\r\n  - O software precisa comportar todas as possíveis mudanças estratégicas do negócio\r\n- Quanto mais tempo o software fica no ar, mais retorno ele gera\r\n  - Quanto mais sustentável ele for, mais tarde ele precisará ser reescrito\r\n- A solução precisa ser arquitetada\r\n  - Um software mal planejado, logo precisará ser refeito\r\n\r\n## Pilares da arquitetura de software\r\n\r\n- Estruturação\r\n  - fácil evolução\r\n  - base sólida\r\n- Componentização para atender o negócio\r\n- Relacionamento entre sistemas\r\n  - protocolos\r\n  - segurança\r\n  - resiliência\r\n- Governança\r\n  - Padrões\r\n  - Regras\r\n  - Documentações\r\n  - Definições claras\r\n  - Independência de pessoas\r\n\r\n## Requisitos arquiteturais (RAs)\r\n\r\n### (Não funcionais)\r\n\r\n- Performance\r\n  - Tempo de resposta\r\n  - Carga\r\n- Armazenamento de dados\r\n  - Custos de armazenamento\r\n  - Legislações sobre armazenamento de dados (e.g LGPD)\r\n- Escalabilidade\r\n  - Elasticidade da estrutura\r\n  - Comportar picos de utilização\r\n  - Escalabilidade horizontal ou vertical\r\n- Segurança\r\n  - Dados sensíveis\r\n  - Dados bancários\r\n  - Criptografias\r\n- Legal\r\n  - Atender as leis locais\r\n- Auditoria\r\n  - retenção de dados de utilização\r\n  - política de retenção\r\n  - política de monitoramento dos dados de auditoria\r\n- Marketing\r\n  - Rastreabilidade de metadados (jornada do usuário)\r\n  - Análise de dados do negócio para decisões estratégicas\r\n\r\n## Características arquiteturais\r\n\r\nEstas são características que devem ser avaliadas que são requisitos não necessariamente funcionais durante o processo de planejamento e arquitetura um software.\r\n\r\nVeja também: Metodologia dos [Doze fatores](/shards/twelve-factors) para construção de software\r\n\r\n### Características operacionais\r\n\r\n- Disponibilidade\r\n  - SLA - Service Level Agreement\r\n    - Métrica definida com o cliente\r\n  - SLO - Service Level Objective\r\n    - Objetivo a ser alcançado pelo time\r\n  - SLI - Service level Indicators\r\n    - Indicador real de performance\r\n  - SRE - Site Reliability Engineering\r\n    - Soluções de engenharia para garantir a confiabilidade do software\r\n- Recuperação de desastres\r\n  - Planejamento de redundâncias de dados\r\n  - Testes de redundâncias e backups\r\n  - Plano de ação para possíveis problemas (de qualquer tipo)\r\n- Performance\r\n  - Escolha de ferramentas para atender as demandas de performance\r\n  - Escalabilidade da estrutura definida\r\n- Confiabilidade e Segurança\r\n  - Estratégias de validação de dados e acesso ao banco de dados\r\n  - Planos de ação para ataques (e.g. DDOS)\r\n- Escalabilidade\r\n  - Vertical ou horizontal para comportar a necessidade do negócio\r\n\r\n### Características estruturais\r\n\r\n- Configurável\r\n  - Variáveis de ambiente\r\n  - Agnóstica ao ambiente\r\n- Extensibilidade\r\n  - Facilidade para mudanças de bibliotecas\r\n  - Habilidade de fazer trocas de vendors (e.g. salesforce)\r\n- Fácil instalação\r\n  - Padronização de ambientes\r\n  - Pipelines de instalação\r\n  - Gerenciamento de configuração de ferramentas externas (e.g. kafka)\r\n- Reuso de componentes\r\n  - Bibliotecas internas\r\n  - DevTools\r\n- Internacionalização\r\n  - layouts de tela\r\n  - Mensagens de erro\r\n  - Moeda/Ferramentas de cobrança\r\n- Fácil manutenção\r\n  - SOLID\r\n  - Design Patterns\r\n  - Estruturas da aplicação\r\n  - Extensibilidade\r\n  - Testes\r\n- Portabilidade\r\n  - Habilidade de trocar de provedores de banco de dados\r\n  - Troca de provedores de serviço (e.g. AWS)\r\n- Fácil suporte\r\n  - Logs\r\n  - Debugging\r\n  - Observabilidade\r\n\r\n### Características cross-cutting\r\n\r\n- Acessibilidade\r\n  - Boas práticas para de tela\r\n  - Padrões de design\r\n- Políticas de retenção e recuperação de dados\r\n  - Armazenamento de dados antigos ou menos relevantes em armazenamentos mais baratos\r\n- Autenticação e Autorização\r\n  - Autenticação via Identity provider ou API Gateway\r\n  - Autenticação entre microsserviços\r\n  - Politicas do segurança\r\n- Legal\r\n  - Conformidade as demandas legais locais\r\n- Privacidade\r\n  - Avaliação de pontos críticos de acesso e vazamento de dados\r\n  - Políticas anti vazamento de dados\r\n- Segurança\r\n  - Firewall\r\n  - Validações de requisições\r\n  - Monitoramento de vulnerabilidades\r\n- Usabilidade\r\n  - Mapeamento da jornada do usuário no Frontend\r\n  - Estruturação de APIs de forma que atendam o negócio e não somente o domínio da aplicação","src/content/notes/software-architecture-fundamentals.md","12f9cd3aa42ae53e",{"html":45,"metadata":46},"\u003Ch2 id=\"tipos-de-arquiteto\">Tipos de arquiteto\u003C/h2>\n\u003Cul>\n\u003Cli>Tecnológico\n\u003Cul>\n\u003Cli>Expert em uma tecnologia específica\u003C/li>\n\u003Cli>Grau de profundidade extremo\n\u003Cul>\n\u003Cli>Arquiteto AWS, Elastic, Java, DB (dba), SAP\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Corporativo\n\u003Cul>\n\u003Cli>Avalia o impacto estratégico do software organização\n\u003Cul>\n\u003Cli>Vendors, tecnologias, custos\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Planejamento de implantações\n\u003Cul>\n\u003Cli>Softwares core da organização\u003C/li>\n\u003Cli>Migrações\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Solução\n\u003Cul>\n\u003Cli>Ponte entre negócios e software\u003C/li>\n\u003Cli>Transcrição de requisitos e soluções\u003C/li>\n\u003Cli>Desenhos arquiteturais\u003C/li>\n\u003Cli>Análise de impactos comercias nas escolhas de tecnologia\u003C/li>\n\u003Cli>Participa mais do processo comercial, entende da solução, podendo ajudar na venda\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Software\n\u003Cul>\n\u003Cli>Faz parte do processo de engenharia do software\u003C/li>\n\u003Cli>Mais baixo nível (próximo do código) do que o arquiteto de solução\u003C/li>\n\u003Cli>Afeta a estrutura organizacional\n\u003Cul>\n\u003Cli>Formação de times\u003C/li>\n\u003Cli>\u003Ca href=\"/shards/conways-law\">Lei de conway\u003C/a>\u003C/li>\n\u003Cli>“É a organização fundamental de um software e seus componentes, suas relações, seu ambiente, bem como os princípios que guiam seu design e evolução” \u003Ca href=\"https://en.wikipedia.org/wiki/IEEE_1471\">(IEEE Standard 1471)\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Como transformar um requisito de negócio em arquitetura de aplicação\u003C/li>\n\u003Cli>Orquestra desenvolvedores e experts de domínio\u003C/li>\n\u003Cli>Entendimento profundo de conceitos e modelos arquiteturais\u003C/li>\n\u003Cli>Auxilia nos momentos de crise\u003C/li>\n\u003Cli>Reforça boas práticas (visão arquitetural de baixo nível)\u003C/li>\n\u003Cli>Code reviews\u003C/li>\n\u003Cli>Papel comumente exercido por tech-leads ou sêniores sem necessariamente a atribuição de cargo\u003C/li>\n\u003Cli>Pode ser uma área dentro da empresa, sem necessariamente sem uma posição\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"importância-de-aprender-arquitetura-de-software\">Importância de aprender arquitetura de software\u003C/h2>\n\u003Cul>\n\u003Cli>Habilidade de entender a visão macro e micro dos softwares da empresa\u003C/li>\n\u003Cli>Entender mais possibilidades de resolutividade de um problema\u003C/li>\n\u003Cli>Habilidade de pensamento ao longo prazo e sustentabilidade de um software\u003C/li>\n\u003Cli>Melhor entendimento de boas práticas\u003C/li>\n\u003Cli>Clareza no impacto do software na organização\u003C/li>\n\u003Cli>Mais segurança na tomada de decisões\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"arquitetura-vs-design\">Arquitetura VS Design\u003C/h2>\n\u003Cul>\n\u003Cli>Arquitetura - Escopo Global (alto nível)\n\u003Cul>\n\u003Cli>Interação entre os componentes\u003C/li>\n\u003Cli>Abstrações\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Design - Escopo local\n\u003Cul>\n\u003Cli>Uso de padrões\u003C/li>\n\u003Cli>Melhores prática de código\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"sustentabilidade-de-software\">Sustentabilidade de software\u003C/h2>\n\u003Cul>\n\u003Cli>Desenvolver software é caro\n\u003Cul>\n\u003Cli>Times de desenvolvimento e infraestrutura\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Software resolve uma “dor”\n\u003Cul>\n\u003Cli>Um software que não resolve problema, não faz sentido\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Software precisa se pagar ao longo do tempo\n\u003Cul>\n\u003Cli>O valor gerado a longo prazo deve ser mais que os custos do projeto\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Precisa acompanhar a evolução do negócio\n\u003Cul>\n\u003Cli>O software precisa comportar todas as possíveis mudanças estratégicas do negócio\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Quanto mais tempo o software fica no ar, mais retorno ele gera\n\u003Cul>\n\u003Cli>Quanto mais sustentável ele for, mais tarde ele precisará ser reescrito\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>A solução precisa ser arquitetada\n\u003Cul>\n\u003Cli>Um software mal planejado, logo precisará ser refeito\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"pilares-da-arquitetura-de-software\">Pilares da arquitetura de software\u003C/h2>\n\u003Cul>\n\u003Cli>Estruturação\n\u003Cul>\n\u003Cli>fácil evolução\u003C/li>\n\u003Cli>base sólida\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Componentização para atender o negócio\u003C/li>\n\u003Cli>Relacionamento entre sistemas\n\u003Cul>\n\u003Cli>protocolos\u003C/li>\n\u003Cli>segurança\u003C/li>\n\u003Cli>resiliência\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Governança\n\u003Cul>\n\u003Cli>Padrões\u003C/li>\n\u003Cli>Regras\u003C/li>\n\u003Cli>Documentações\u003C/li>\n\u003Cli>Definições claras\u003C/li>\n\u003Cli>Independência de pessoas\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"requisitos-arquiteturais-ras\">Requisitos arquiteturais (RAs)\u003C/h2>\n\u003Ch3 id=\"não-funcionais\">(Não funcionais)\u003C/h3>\n\u003Cul>\n\u003Cli>Performance\n\u003Cul>\n\u003Cli>Tempo de resposta\u003C/li>\n\u003Cli>Carga\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Armazenamento de dados\n\u003Cul>\n\u003Cli>Custos de armazenamento\u003C/li>\n\u003Cli>Legislações sobre armazenamento de dados (e.g LGPD)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Escalabilidade\n\u003Cul>\n\u003Cli>Elasticidade da estrutura\u003C/li>\n\u003Cli>Comportar picos de utilização\u003C/li>\n\u003Cli>Escalabilidade horizontal ou vertical\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Segurança\n\u003Cul>\n\u003Cli>Dados sensíveis\u003C/li>\n\u003Cli>Dados bancários\u003C/li>\n\u003Cli>Criptografias\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Legal\n\u003Cul>\n\u003Cli>Atender as leis locais\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Auditoria\n\u003Cul>\n\u003Cli>retenção de dados de utilização\u003C/li>\n\u003Cli>política de retenção\u003C/li>\n\u003Cli>política de monitoramento dos dados de auditoria\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Marketing\n\u003Cul>\n\u003Cli>Rastreabilidade de metadados (jornada do usuário)\u003C/li>\n\u003Cli>Análise de dados do negócio para decisões estratégicas\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"características-arquiteturais\">Características arquiteturais\u003C/h2>\n\u003Cp>Estas são características que devem ser avaliadas que são requisitos não necessariamente funcionais durante o processo de planejamento e arquitetura um software.\u003C/p>\n\u003Cp>Veja também: Metodologia dos \u003Ca href=\"/shards/twelve-factors\">Doze fatores\u003C/a> para construção de software\u003C/p>\n\u003Ch3 id=\"características-operacionais\">Características operacionais\u003C/h3>\n\u003Cul>\n\u003Cli>Disponibilidade\n\u003Cul>\n\u003Cli>SLA - Service Level Agreement\n\u003Cul>\n\u003Cli>Métrica definida com o cliente\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>SLO - Service Level Objective\n\u003Cul>\n\u003Cli>Objetivo a ser alcançado pelo time\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>SLI - Service level Indicators\n\u003Cul>\n\u003Cli>Indicador real de performance\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>SRE - Site Reliability Engineering\n\u003Cul>\n\u003Cli>Soluções de engenharia para garantir a confiabilidade do software\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Recuperação de desastres\n\u003Cul>\n\u003Cli>Planejamento de redundâncias de dados\u003C/li>\n\u003Cli>Testes de redundâncias e backups\u003C/li>\n\u003Cli>Plano de ação para possíveis problemas (de qualquer tipo)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Performance\n\u003Cul>\n\u003Cli>Escolha de ferramentas para atender as demandas de performance\u003C/li>\n\u003Cli>Escalabilidade da estrutura definida\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Confiabilidade e Segurança\n\u003Cul>\n\u003Cli>Estratégias de validação de dados e acesso ao banco de dados\u003C/li>\n\u003Cli>Planos de ação para ataques (e.g. DDOS)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Escalabilidade\n\u003Cul>\n\u003Cli>Vertical ou horizontal para comportar a necessidade do negócio\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"características-estruturais\">Características estruturais\u003C/h3>\n\u003Cul>\n\u003Cli>Configurável\n\u003Cul>\n\u003Cli>Variáveis de ambiente\u003C/li>\n\u003Cli>Agnóstica ao ambiente\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Extensibilidade\n\u003Cul>\n\u003Cli>Facilidade para mudanças de bibliotecas\u003C/li>\n\u003Cli>Habilidade de fazer trocas de vendors (e.g. salesforce)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Fácil instalação\n\u003Cul>\n\u003Cli>Padronização de ambientes\u003C/li>\n\u003Cli>Pipelines de instalação\u003C/li>\n\u003Cli>Gerenciamento de configuração de ferramentas externas (e.g. kafka)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Reuso de componentes\n\u003Cul>\n\u003Cli>Bibliotecas internas\u003C/li>\n\u003Cli>DevTools\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Internacionalização\n\u003Cul>\n\u003Cli>layouts de tela\u003C/li>\n\u003Cli>Mensagens de erro\u003C/li>\n\u003Cli>Moeda/Ferramentas de cobrança\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Fácil manutenção\n\u003Cul>\n\u003Cli>SOLID\u003C/li>\n\u003Cli>Design Patterns\u003C/li>\n\u003Cli>Estruturas da aplicação\u003C/li>\n\u003Cli>Extensibilidade\u003C/li>\n\u003Cli>Testes\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Portabilidade\n\u003Cul>\n\u003Cli>Habilidade de trocar de provedores de banco de dados\u003C/li>\n\u003Cli>Troca de provedores de serviço (e.g. AWS)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Fácil suporte\n\u003Cul>\n\u003Cli>Logs\u003C/li>\n\u003Cli>Debugging\u003C/li>\n\u003Cli>Observabilidade\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"características-cross-cutting\">Características cross-cutting\u003C/h3>\n\u003Cul>\n\u003Cli>Acessibilidade\n\u003Cul>\n\u003Cli>Boas práticas para de tela\u003C/li>\n\u003Cli>Padrões de design\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Políticas de retenção e recuperação de dados\n\u003Cul>\n\u003Cli>Armazenamento de dados antigos ou menos relevantes em armazenamentos mais baratos\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Autenticação e Autorização\n\u003Cul>\n\u003Cli>Autenticação via Identity provider ou API Gateway\u003C/li>\n\u003Cli>Autenticação entre microsserviços\u003C/li>\n\u003Cli>Politicas do segurança\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Legal\n\u003Cul>\n\u003Cli>Conformidade as demandas legais locais\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Privacidade\n\u003Cul>\n\u003Cli>Avaliação de pontos críticos de acesso e vazamento de dados\u003C/li>\n\u003Cli>Políticas anti vazamento de dados\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Segurança\n\u003Cul>\n\u003Cli>Firewall\u003C/li>\n\u003Cli>Validações de requisições\u003C/li>\n\u003Cli>Monitoramento de vulnerabilidades\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Usabilidade\n\u003Cul>\n\u003Cli>Mapeamento da jornada do usuário no Frontend\u003C/li>\n\u003Cli>Estruturação de APIs de forma que atendam o negócio e não somente o domínio da aplicação\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>",{"headings":47,"localImagePaths":83,"remoteImagePaths":84,"frontmatter":85,"imagePaths":88},[48,52,55,58,61,64,67,71,74,77,80],{"depth":49,"slug":50,"text":51},2,"tipos-de-arquiteto","Tipos de arquiteto",{"depth":49,"slug":53,"text":54},"importância-de-aprender-arquitetura-de-software","Importância de aprender arquitetura de software",{"depth":49,"slug":56,"text":57},"arquitetura-vs-design","Arquitetura VS Design",{"depth":49,"slug":59,"text":60},"sustentabilidade-de-software","Sustentabilidade de software",{"depth":49,"slug":62,"text":63},"pilares-da-arquitetura-de-software","Pilares da arquitetura de software",{"depth":49,"slug":65,"text":66},"requisitos-arquiteturais-ras","Requisitos arquiteturais (RAs)",{"depth":68,"slug":69,"text":70},3,"não-funcionais","(Não funcionais)",{"depth":49,"slug":72,"text":73},"características-arquiteturais","Características arquiteturais",{"depth":68,"slug":75,"text":76},"características-operacionais","Características operacionais",{"depth":68,"slug":78,"text":79},"características-estruturais","Características estruturais",{"depth":68,"slug":81,"text":82},"características-cross-cutting","Características cross-cutting",[],[],{"title":35,"pubDate":86,"hero":37,"tags":87},"2024-10-17",[18,39,40],[],"setup-linux-wsl",{"id":89,"data":91,"body":99,"filePath":100,"digest":101,"rendered":102},{"title":92,"pubDate":93,"hero":94,"tags":95},"Setup Linux (wsl)",["Date","2024-09-25T00:00:00.000Z"],"/images/wsl.webp",[96,97,98],"linux","wsl","ubuntu","## O que vamos instalar?\r\n\r\n- [O que vamos instalar?](#o-que-vamos-instalar)\r\n  - [Aliases \\& Path](#aliases--path)\r\n  - [Pacotes básicos](#pacotes-básicos)\r\n  - [Google Chrome](#google-chrome)\r\n  - [Docker](#docker)\r\n  - [Java](#java)\r\n  - [Node](#node)\r\n  - [Golang](#golang)\r\n  - [Chave SSH](#chave-ssh)\r\n  - [Intellij (Toolbox)](#intellij-toolbox)\r\n  - [VsCode](#vscode)\r\n\r\n### Aliases & Path\r\n\r\nPrimeiro vamos baixar o vim (opcional) para editar alguns arquivos durante o processo\r\n\r\n``` sh\r\nsudo apt install -y vim\r\n```\r\n\r\n\u003Cbr>\r\nEntre no arquivo de aliases (caso não goste do vim, troque pelo nano ou outro)\r\n\r\n``` sh\r\nvim ~/.bash_aliases\r\n```\r\n\r\n\u003Cbr>\r\nAdicione os atalhos e modifique conforme necessário, estes são alguns que eu gosto de utilizar\r\n\r\n``` sh\r\n# Aliases\r\nalias refresh='source ~/.bashrc && source ~/.bashrc'\r\nalias config='vim ~/.bash_aliases'\r\nalias update='sudo apt update && sudo apt -y upgrade'\r\nalias clean='sudo apt -y autoclean && sudo apt -y autoremove'\r\n\r\n# Shortcuts\r\nalias q='exit'\r\nalias c='clear'\r\nalias home='cd ~/'\r\nalias chrome='google-chrome $@ &'\r\nalias google='google-chrome $@ &'\r\nalias toolbox='~/toolbox/jetbrains-toolbox'\r\n\r\n# PATH\r\nexport PATH=$PATH:/usr/local/go/bin\r\n```\r\n\r\n\u003Cbr>\r\nagora recarregue o arquivo para ter acesso a estes comandos\r\n\r\n``` sh\r\nsource ~/.bash_aliases\r\n```\r\n\r\ncom estes aliases fica muito mais fácil daqui para frente, agora podemos utilizar o comando *refresh* para fazer isso\r\n\r\n### Pacotes básicos\r\n\r\n``` sh\r\nupdate\r\nsudo apt install -y git zip unzip nautilus fuse net-tools\r\n```\r\n\r\n\u003Cbr>\r\nPara finalizar a configuração do git, é necessário configurar as informações do usuário (preencha com seus dados)\r\n\r\n``` sh\r\ngit config --global user.name \"Your Name\"\r\ngit config --global user.email \"your@email.com\"\r\ngit config --global core.autocrlf true\r\ngit config --global pull.rebase true\r\n```\r\n\r\n### Google Chrome\r\n\r\napós a instalação, poderemos utilizar os atalhos que configuramos antes, *google*, *chrome* ou o comando padrão *google-chrome* (este vai travar o terminar)\r\n\r\n``` sh\r\nrm -rf ~/tmp\r\nmkdir ~/tmp\r\ncd ~/tmp\r\nwget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\r\nsudo apt install --fix-missing ./google-chrome-stable_current_amd64.deb\r\nclean\r\ncd ..\r\n```\r\n\r\n### Docker\r\n\r\nAo instalar o Docker diretamente no wsl ao invés do docker desktop, fica muito mais prático utilizar o Docker como ele seria utilizado em uma máquina Linux e com cli. Caso prefira o Docker com interface gráfica e botões bonitinhos, pule esta etapa e instale o Docker desktop.\r\n\r\n``` sh\r\nsudo apt install -y apt-transport-https ca-certificates curl software-properties-common\r\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\r\necho \"deb [signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\r\nupdate\r\nsudo apt install -y docker-ce docker-ce-cli containerd.io\r\nsudo usermod -aG docker $USER\r\n```\r\n\r\n\u003Cbr>\r\nApós a instalação, como o usuário foi modificado, feche o terminal e abra novamente, em caso de problemas verifique a instalação\r\n\r\n``` sh\r\ndocker --version\r\n```\r\n\r\n### Java\r\n\r\nSDKman é com certeza absoluta a forma mais prática de instalar e gerenciar uma ou várias versões do java no Linux, mas também te ajuda a baixar `Kotlin`, `Groovy`, `Maven`, `Gradle` entre outras ferramentas.\r\n\r\n``` sh\r\ncurl -s \"https://get.sdkman.io\" | bash\r\nsource \"$HOME/.sdkman/bin/sdkman-init.sh\"\r\nsdk install java\r\njava --version\r\n```\r\n\r\n\u003Cbr>\r\n\r\nA partir de agora utilize o comando `sdk` para gerenciar suas instalações\r\n\r\n``` sh\r\nsdk --help\r\n```\r\n\r\n### Node\r\n\r\n*Fast node manager*, é um gerenciador de versões do Node recomendado no site oficial, então vamos utiliza-lo\r\n\r\n``` sh\r\ncurl -fsSL https://fnm.vercel.app/install | bash\r\nsource ~/.bashrc\r\nfnm install --lts\r\nnode -v\r\nnpm -v\r\n```\r\n\r\n\u003Cbr>\r\n\r\nA partir de agora utilize o comando `fnm` para gerenciar suas instalações\r\n\r\n``` sh\r\nfnm --help\r\n```\r\n\r\n\u003Cbr>\r\n\r\nCaso queira baixar o `pnpm`\r\n\r\n``` sh\r\nnpm install -g pnpm\r\n```\r\n\r\n### Golang\r\n\r\nPara instalar a versão mais atualizada [verifique no site oficial](https://go.dev/doc/install) a versão atual e atualize o comando de acordo com o número da versão (existe um pacote apt chamado golang-go, porém este costuma estar desatualizado)\r\n\r\n``` sh\r\nexport GO_VERSION='go1.23.1'\r\n```\r\n\r\nCom a versão definida na nossa variável podemos baixar somente copiando os comandos abaixo e no futuro executar o mesmo processo caso precisarmos atualizar o go\r\n\r\n``` sh\r\nsudo rm -rf /usr/local/go \r\nwget https://go.dev/dl/${GO_VERSION}.linux-amd64.tar.gz\r\nsudo tar -C /usr/local -xzf ${GO_VERSION}.linux-amd64.tar.gz\r\nrm ${GO_VERSION}.linux-amd64.tar.gz\r\ngo version\r\n```\r\n\r\n### Chave SSH\r\n\r\nPreencha seu email antes de digitar o comando e confirme ou insira os passos de senha como desejar.\r\n\r\n``` sh\r\nssh-keygen -t ed25519 -C \"your@email.com\"\r\neval \"$(ssh-agent -s)\"\r\nssh-add ~/.ssh/id_ed25519\r\necho\r\ncat ~/.ssh/id_ed25519.pub\r\n```\r\n\r\ncopie a chave no final da execução, aí é só [colar no github](https://github.com/settings/ssh/new)\r\n\r\n### Intellij (Toolbox)\r\n\r\n[Baixe o Jetbrains toolbox](https://www.jetbrains.com/pt-br/lp/toolbox/), ele é um gerenciador de ferramentas da Jetbrains lá você pode baixa o Intellij (Goland, WebStorm...).\r\nnavegue até o diretório que se encontra o arquivo (provavelmente Downloads)\r\n\r\n``` sh\r\ngoogle-chrome https://www.jetbrains.com/pt-br/lp/toolbox/\r\ncd ~/Downloads\r\n```\r\n\r\nAgora descompacte e mova o arquivo para o lugar certo.\r\n\r\n``` sh\r\ntar -xvf jetbrains-toolbox-*.tar.gz # Descompacta\r\nrm jetbrains-toolbox-*.tar.gz # Exclui o zip\r\nmv jetbrains-toolbox-* ~/toolbox # Move os arquivos para a pasta toolbox\r\n```\r\n\r\nPronto agora é só utilizar o comando `toolbox` configurado lá nos aliases e baixar o Intellij pela interface gráfica do Toolbox\r\n\r\n### VsCode\r\n\r\n Caso queira utilizar o [VSCode](https://code.visualstudio.com/), instale diretamente no windows e utilize diretamente do Linux a partir do comando *code*, em caso de problemas com a sua instalação,\r\n remova os arquivos de configuração do Linux utilizando:\r\n\r\n``` sh\r\nrm -rf ~/.vscode-*\r\n```\r\n\r\n\u003Cbr>\r\nAgora você já tem o essencial instalado dentro do WSL. Parabéns✨\r\n\r\nHappy coding 🧑‍💻","src/content/notes/setup-linux-wsl.md","3d2145ff1f797d42",{"html":103,"metadata":104},"\u003Ch2 id=\"o-que-vamos-instalar\">O que vamos instalar?\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#o-que-vamos-instalar\">O que vamos instalar?\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#aliases--path\">Aliases &#x26; Path\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#pacotes-b%C3%A1sicos\">Pacotes básicos\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#google-chrome\">Google Chrome\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#docker\">Docker\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#java\">Java\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#node\">Node\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#golang\">Golang\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#chave-ssh\">Chave SSH\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#intellij-toolbox\">Intellij (Toolbox)\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#vscode\">VsCode\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"aliases--path\">Aliases &#x26; Path\u003C/h3>\n\u003Cp>Primeiro vamos baixar o vim (opcional) para editar alguns arquivos durante o processo\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> apt\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -y\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> vim\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\nEntre no arquivo de aliases (caso não goste do vim, troque pelo nano ou outro)\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">vim\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/.bash_aliases\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\nAdicione os atalhos e modifique conforme necessário, estes são alguns que eu gosto de utilizar\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Aliases\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">alias\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> refresh\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'source ~/.bashrc &#x26;&#x26; source ~/.bashrc'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">alias\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> config\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'vim ~/.bash_aliases'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">alias\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> update\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'sudo apt update &#x26;&#x26; sudo apt -y upgrade'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">alias\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> clean\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'sudo apt -y autoclean &#x26;&#x26; sudo apt -y autoremove'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Shortcuts\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">alias\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> q\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'exit'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">alias\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> c\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'clear'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">alias\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> home\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'cd ~/'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">alias\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> chrome\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'google-chrome $@ &#x26;'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">alias\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> google\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'google-chrome $@ &#x26;'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">alias\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> toolbox\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'~/toolbox/jetbrains-toolbox'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># PATH\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> PATH\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$PATH:/usr/local/go/bin\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\nagora recarregue o arquivo para ter acesso a estes comandos\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">source\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/.bash_aliases\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>com estes aliases fica muito mais fácil daqui para frente, agora podemos utilizar o comando \u003Cem>refresh\u003C/em> para fazer isso\u003C/p>\n\u003Ch3 id=\"pacotes-básicos\">Pacotes básicos\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">update\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> apt\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -y\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> git\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> zip\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> unzip\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> nautilus\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> fuse\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> net-tools\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\nPara finalizar a configuração do git, é necessário configurar as informações do usuário (preencha com seus dados)\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">git\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> config\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --global\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> user.name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Your Name\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">git\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> config\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --global\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> user.email\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"your@email.com\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">git\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> config\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --global\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> core.autocrlf\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">git\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> config\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --global\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> pull.rebase\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"google-chrome\">Google Chrome\u003C/h3>\n\u003Cp>após a instalação, poderemos utilizar os atalhos que configuramos antes, \u003Cem>google\u003C/em>, \u003Cem>chrome\u003C/em> ou o comando padrão \u003Cem>google-chrome\u003C/em> (este vai travar o terminar)\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">rm\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -rf\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/tmp\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">mkdir\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/tmp\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">cd\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/tmp\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">wget\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> apt\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --fix-missing\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ./google-chrome-stable_current_amd64.deb\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">clean\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">cd\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ..\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"docker\">Docker\u003C/h3>\n\u003Cp>Ao instalar o Docker diretamente no wsl ao invés do docker desktop, fica muito mais prático utilizar o Docker como ele seria utilizado em uma máquina Linux e com cli. Caso prefira o Docker com interface gráfica e botões bonitinhos, pule esta etapa e instale o Docker desktop.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> apt\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -y\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> apt-transport-https\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ca-certificates\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> curl\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> software-properties-common\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">curl\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -fsSL\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> https://download.docker.com/linux/ubuntu/gpg\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> gpg\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --dearmor\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -o\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> /usr/share/keyrings/docker-archive-keyring.gpg\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"deb [signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(\u003C/span>\u003Cspan style=\"color:#B392F0\">lsb_release\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -cs\u003C/span>\u003Cspan style=\"color:#9ECBFF\">) stable\"\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> tee\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> /etc/apt/sources.list.d/docker.list\u003C/span>\u003Cspan style=\"color:#F97583\"> >\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> /dev/null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">update\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> apt\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -y\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> docker-ce\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> docker-ce-cli\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> containerd.io\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> usermod\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -aG\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> docker\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $USER\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\nApós a instalação, como o usuário foi modificado, feche o terminal e abra novamente, em caso de problemas verifique a instalação\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --version\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"java\">Java\u003C/h3>\n\u003Cp>SDKman é com certeza absoluta a forma mais prática de instalar e gerenciar uma ou várias versões do java no Linux, mas também te ajuda a baixar \u003Ccode>Kotlin\u003C/code>, \u003Ccode>Groovy\u003C/code>, \u003Ccode>Maven\u003C/code>, \u003Ccode>Gradle\u003C/code> entre outras ferramentas.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">curl\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -s\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"https://get.sdkman.io\"\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> bash\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">source\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$HOME\u003C/span>\u003Cspan style=\"color:#9ECBFF\">/.sdkman/bin/sdkman-init.sh\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sdk\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> java\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">java\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --version\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Cp>A partir de agora utilize o comando \u003Ccode>sdk\u003C/code> para gerenciar suas instalações\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sdk\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --help\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"node\">Node\u003C/h3>\n\u003Cp>\u003Cem>Fast node manager\u003C/em>, é um gerenciador de versões do Node recomendado no site oficial, então vamos utiliza-lo\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">curl\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -fsSL\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> https://fnm.vercel.app/install\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> bash\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">source\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/.bashrc\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">fnm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --lts\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">node\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -v\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">npm\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -v\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Cp>A partir de agora utilize o comando \u003Ccode>fnm\u003C/code> para gerenciar suas instalações\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">fnm\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --help\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Cp>Caso queira baixar o \u003Ccode>pnpm\u003C/code>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">npm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -g\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> pnpm\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"golang\">Golang\u003C/h3>\n\u003Cp>Para instalar a versão mais atualizada \u003Ca href=\"https://go.dev/doc/install\">verifique no site oficial\u003C/a> a versão atual e atualize o comando de acordo com o número da versão (existe um pacote apt chamado golang-go, porém este costuma estar desatualizado)\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> GO_VERSION\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'go1.23.1'\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Com a versão definida na nossa variável podemos baixar somente copiando os comandos abaixo e no futuro executar o mesmo processo caso precisarmos atualizar o go\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> rm\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -rf\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> /usr/local/go\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">wget\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> https://go.dev/dl/\u003C/span>\u003Cspan style=\"color:#E1E4E8\">${GO_VERSION}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.linux-amd64.tar.gz\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> tar\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -C\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> /usr/local\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -xzf\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ${GO_VERSION}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.linux-amd64.tar.gz\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">rm\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ${GO_VERSION}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.linux-amd64.tar.gz\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">go\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> version\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"chave-ssh\">Chave SSH\u003C/h3>\n\u003Cp>Preencha seu email antes de digitar o comando e confirme ou insira os passos de senha como desejar.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">ssh-keygen\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -t\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ed25519\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -C\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"your@email.com\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">eval\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"$(\u003C/span>\u003Cspan style=\"color:#B392F0\">ssh-agent\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">)\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">ssh-add\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/.ssh/id_ed25519\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">cat\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/.ssh/id_ed25519.pub\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>copie a chave no final da execução, aí é só \u003Ca href=\"https://github.com/settings/ssh/new\">colar no github\u003C/a>\u003C/p>\n\u003Ch3 id=\"intellij-toolbox\">Intellij (Toolbox)\u003C/h3>\n\u003Cp>\u003Ca href=\"https://www.jetbrains.com/pt-br/lp/toolbox/\">Baixe o Jetbrains toolbox\u003C/a>, ele é um gerenciador de ferramentas da Jetbrains lá você pode baixa o Intellij (Goland, WebStorm…).\r\nnavegue até o diretório que se encontra o arquivo (provavelmente Downloads)\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">google-chrome\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> https://www.jetbrains.com/pt-br/lp/toolbox/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">cd\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/Downloads\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Agora descompacte e mova o arquivo para o lugar certo.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">tar\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -xvf\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> jetbrains-toolbox-\u003C/span>\u003Cspan style=\"color:#79B8FF\">*\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.tar.gz\u003C/span>\u003Cspan style=\"color:#6A737D\"> # Descompacta\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">rm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> jetbrains-toolbox-\u003C/span>\u003Cspan style=\"color:#79B8FF\">*\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.tar.gz\u003C/span>\u003Cspan style=\"color:#6A737D\"> # Exclui o zip\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">mv\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> jetbrains-toolbox-\u003C/span>\u003Cspan style=\"color:#79B8FF\">*\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/toolbox\u003C/span>\u003Cspan style=\"color:#6A737D\"> # Move os arquivos para a pasta toolbox\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Pronto agora é só utilizar o comando \u003Ccode>toolbox\u003C/code> configurado lá nos aliases e baixar o Intellij pela interface gráfica do Toolbox\u003C/p>\n\u003Ch3 id=\"vscode\">VsCode\u003C/h3>\n\u003Cp>Caso queira utilizar o \u003Ca href=\"https://code.visualstudio.com/\">VSCode\u003C/a>, instale diretamente no windows e utilize diretamente do Linux a partir do comando \u003Cem>code\u003C/em>, em caso de problemas com a sua instalação,\r\nremova os arquivos de configuração do Linux utilizando:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">rm\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -rf\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/.vscode-\u003C/span>\u003Cspan style=\"color:#79B8FF\">*\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\nAgora você já tem o essencial instalado dentro do WSL. Parabéns✨\n\u003Cp>Happy coding 🧑‍💻\u003C/p>",{"headings":105,"localImagePaths":139,"remoteImagePaths":140,"frontmatter":141,"imagePaths":144},[106,109,112,115,118,121,124,127,130,133,136],{"depth":49,"slug":107,"text":108},"o-que-vamos-instalar","O que vamos instalar?",{"depth":68,"slug":110,"text":111},"aliases--path","Aliases & Path",{"depth":68,"slug":113,"text":114},"pacotes-básicos","Pacotes básicos",{"depth":68,"slug":116,"text":117},"google-chrome","Google Chrome",{"depth":68,"slug":119,"text":120},"docker","Docker",{"depth":68,"slug":122,"text":123},"java","Java",{"depth":68,"slug":125,"text":126},"node","Node",{"depth":68,"slug":128,"text":129},"golang","Golang",{"depth":68,"slug":131,"text":132},"chave-ssh","Chave SSH",{"depth":68,"slug":134,"text":135},"intellij-toolbox","Intellij (Toolbox)",{"depth":68,"slug":137,"text":138},"vscode","VsCode",[],[],{"title":92,"pubDate":142,"hero":94,"tags":143},"2024-09-25",[96,97,98],[],"how-docker-works",{"id":145,"data":147,"body":153,"filePath":154,"digest":155,"rendered":156},{"title":148,"pubDate":149,"hero":150,"tags":151},"Como Docker funciona",["Date","2025-01-05T00:00:00.000Z"],"/images/docker-inside.webp",[18,119,152],"containers","## O que precisamos entender\r\n\r\n- [O que precisamos entender](#o-que-precisamos-entender)\r\n- [O que são Containers?](#o-que-são-containers)\r\n- [Container Runtimes](#container-runtimes)\r\n  - [Outras ferramentas da Docker Inc](#outras-ferramentas-da-docker-inc)\r\n- [Namespaces](#namespaces)\r\n- [Cgroups](#cgroups)\r\n- [Overlay File Systems (OFS)](#overlay-file-systems-ofs)\r\n- [Dockerfile](#dockerfile)\r\n- [Client - Host](#client---host)\r\n\r\n## O que são Containers?\r\n\r\nContainers são unidades padronizadas de software que empacotam código e todas suas dependências, garantindo uma execução consistente ao escalar containers idênticos e imutáveis. Containers proporcionam uma forma de virtualização leve e rápida ao isolar processos e recursos enquanto compartilham o mesmo kernel do sistema operacional sem a necessidade de um Hypervisor ou múltiplas instâncias do sistema operacional, ao contrário do que é feito ao utilizar máquinas virtuais. Outra característica interessante, é o isolamento entre os containers, cada container, a não ser que seja explicitamente configurado para isto, só tem acesso aos seus próprios recursos, tornando tudo mais seguro.\r\n\r\nContainers são:\r\n\r\n- Leves\r\n- Portáteis\r\n- Escaláveis\r\n- Imutáveis\r\n- Descartáveis\r\n\r\n![Docker VS VMs](/images/docker-vs-vm.webp)\r\n\r\n## Container Runtimes\r\n\r\nDocker foi uma ferramenta criada pela dotCloud em 2013 para solucionar um problema interno, utilizando parte da estrutura de containers do Linux e outros componentes, posteriormente se tornando Open Source através da [Open Containers Initiative (OCI)](https://opencontainers.org/). Com a popularização a dotCloud foi renomeada para Docker Inc.\r\n\r\nDocker é uma ferramenta completa de gerenciamento de rede, disco e imagens com uma arquitetura cliente servidor. Docker também contém um *Daemon*, uma ferramenta centralizadora que faz a gestão dos containers e imagens, este *Daemon* se torna então um ponto único de falha (SPof), pois caso ele pare de executar, todos os containers param junto, algo que já não acontece em outras runtimes como o [Podman](https://podman.io/), outro ponto conturbado sobre o daemon Docker, é o fato de ele por padrão ter acesso de root na máquina host, o que em casos de invasão em algum dos containers, pode dar acesso a partes importantes do sistema operacional host, porém já é possível configurar o Docker como *Rootless* para evitar este tipo de vulnerabilidade, mas tenha em mente que esta não é a configuração padrão.\r\n\r\n![Docker Architecture](/images/docker-architecture.webp)\r\n\r\n### Outras ferramentas da Docker Inc\r\n\r\nAlém do Docker em si, a Docker Inc. contém alguma outras ferramentas que podem ser úteis para o desenvolvimento utilizando containers.\r\n\r\n- Docker Desktop\r\n- Docker Hub\r\n- Docker Build Cloud\r\n- Docker Scout\r\n- Docker AI\r\n- TestContainers\r\n- [Tilt](https://tilt.dev/)\r\n\r\n## Namespaces\r\n\r\nUsado para isolamento de processos, usuários, rede, file system, etc.\r\ncada container tem seu próprio namespace.\r\n\r\n## Cgroups\r\n\r\nUsado para limitar e isolar recursos, exemplo: Esse processo/namespace vai utilizar só:\r\n\r\n- memory=500mb\r\n- cpu_shares=512\r\n\r\n## Overlay File Systems (OFS)\r\n\r\nUsado para criar e modificar imagens, através deste mecanismo que o docker reutiliza camadas/partes (*layers*) de um uma imagem ou dependências em todos os containers que precisarem, sem a necessidade de duplicar a informação\r\n\r\no container contem uma parte com comada(s) de estado imutável, e uma de leitura e escrita\r\n\r\n## Dockerfile\r\n\r\ndescrição de quais os comandos serão executados ao criar o container para que ele funcione da forma esperada\r\n\r\n``` yaml\r\nFROM: ubuntu:latest\r\nRUN: ./build-script\r\nEXPOSE: 8080\r\n```\r\n\r\na cada nova execução o Dockerfile é gerada uma nova imagem\r\n\r\ntodas as imagens ficam armazenadas no registry para poderem ser reutilizadas no futuro.\r\n\r\nao executar o Dockerfile, é feito um pull desta imagem\r\n\r\nao efetuar um commit dentro de uma imagem docker, é possível gerar uma imagem nova a partir de uma já existe em execução, tirando proveito dos dados presentes na camada de leitura e escrita, assim feito um push desta imagem (tipo Git, um grande repo de imagens).\r\n\r\n## Client - Host\r\n\r\n- Host\r\n  - Daemon - API\r\n  - Network (entre containers)\r\n  - Volumes (fora do container, dado persistente)\r\n  - Cache (registry)\r\n\r\n- Client\r\n  - Containers\r\n  - Volumes\r\n  - Network","src/content/notes/how-docker-works.md","9ad55ae1fbe6e064",{"html":157,"metadata":158},"\u003Ch2 id=\"o-que-precisamos-entender\">O que precisamos entender\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#o-que-precisamos-entender\">O que precisamos entender\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#o-que-s%C3%A3o-containers\">O que são Containers?\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#container-runtimes\">Container Runtimes\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#outras-ferramentas-da-docker-inc\">Outras ferramentas da Docker Inc\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#namespaces\">Namespaces\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#cgroups\">Cgroups\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#overlay-file-systems-ofs\">Overlay File Systems (OFS)\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#dockerfile\">Dockerfile\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#client---host\">Client - Host\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"o-que-são-containers\">O que são Containers?\u003C/h2>\n\u003Cp>Containers são unidades padronizadas de software que empacotam código e todas suas dependências, garantindo uma execução consistente ao escalar containers idênticos e imutáveis. Containers proporcionam uma forma de virtualização leve e rápida ao isolar processos e recursos enquanto compartilham o mesmo kernel do sistema operacional sem a necessidade de um Hypervisor ou múltiplas instâncias do sistema operacional, ao contrário do que é feito ao utilizar máquinas virtuais. Outra característica interessante, é o isolamento entre os containers, cada container, a não ser que seja explicitamente configurado para isto, só tem acesso aos seus próprios recursos, tornando tudo mais seguro.\u003C/p>\n\u003Cp>Containers são:\u003C/p>\n\u003Cul>\n\u003Cli>Leves\u003C/li>\n\u003Cli>Portáteis\u003C/li>\n\u003Cli>Escaláveis\u003C/li>\n\u003Cli>Imutáveis\u003C/li>\n\u003Cli>Descartáveis\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cimg src=\"/images/docker-vs-vm.webp\" alt=\"Docker VS VMs\">\u003C/p>\n\u003Ch2 id=\"container-runtimes\">Container Runtimes\u003C/h2>\n\u003Cp>Docker foi uma ferramenta criada pela dotCloud em 2013 para solucionar um problema interno, utilizando parte da estrutura de containers do Linux e outros componentes, posteriormente se tornando Open Source através da \u003Ca href=\"https://opencontainers.org/\">Open Containers Initiative (OCI)\u003C/a>. Com a popularização a dotCloud foi renomeada para Docker Inc.\u003C/p>\n\u003Cp>Docker é uma ferramenta completa de gerenciamento de rede, disco e imagens com uma arquitetura cliente servidor. Docker também contém um \u003Cem>Daemon\u003C/em>, uma ferramenta centralizadora que faz a gestão dos containers e imagens, este \u003Cem>Daemon\u003C/em> se torna então um ponto único de falha (SPof), pois caso ele pare de executar, todos os containers param junto, algo que já não acontece em outras runtimes como o \u003Ca href=\"https://podman.io/\">Podman\u003C/a>, outro ponto conturbado sobre o daemon Docker, é o fato de ele por padrão ter acesso de root na máquina host, o que em casos de invasão em algum dos containers, pode dar acesso a partes importantes do sistema operacional host, porém já é possível configurar o Docker como \u003Cem>Rootless\u003C/em> para evitar este tipo de vulnerabilidade, mas tenha em mente que esta não é a configuração padrão.\u003C/p>\n\u003Cp>\u003Cimg src=\"/images/docker-architecture.webp\" alt=\"Docker Architecture\">\u003C/p>\n\u003Ch3 id=\"outras-ferramentas-da-docker-inc\">Outras ferramentas da Docker Inc\u003C/h3>\n\u003Cp>Além do Docker em si, a Docker Inc. contém alguma outras ferramentas que podem ser úteis para o desenvolvimento utilizando containers.\u003C/p>\n\u003Cul>\n\u003Cli>Docker Desktop\u003C/li>\n\u003Cli>Docker Hub\u003C/li>\n\u003Cli>Docker Build Cloud\u003C/li>\n\u003Cli>Docker Scout\u003C/li>\n\u003Cli>Docker AI\u003C/li>\n\u003Cli>TestContainers\u003C/li>\n\u003Cli>\u003Ca href=\"https://tilt.dev/\">Tilt\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"namespaces\">Namespaces\u003C/h2>\n\u003Cp>Usado para isolamento de processos, usuários, rede, file system, etc.\r\ncada container tem seu próprio namespace.\u003C/p>\n\u003Ch2 id=\"cgroups\">Cgroups\u003C/h2>\n\u003Cp>Usado para limitar e isolar recursos, exemplo: Esse processo/namespace vai utilizar só:\u003C/p>\n\u003Cul>\n\u003Cli>memory=500mb\u003C/li>\n\u003Cli>cpu_shares=512\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"overlay-file-systems-ofs\">Overlay File Systems (OFS)\u003C/h2>\n\u003Cp>Usado para criar e modificar imagens, através deste mecanismo que o docker reutiliza camadas/partes (\u003Cem>layers\u003C/em>) de um uma imagem ou dependências em todos os containers que precisarem, sem a necessidade de duplicar a informação\u003C/p>\n\u003Cp>o container contem uma parte com comada(s) de estado imutável, e uma de leitura e escrita\u003C/p>\n\u003Ch2 id=\"dockerfile\">Dockerfile\u003C/h2>\n\u003Cp>descrição de quais os comandos serão executados ao criar o container para que ele funcione da forma esperada\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"yaml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">ubuntu:latest\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">RUN\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">./build-script\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">EXPOSE\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">8080\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>a cada nova execução o Dockerfile é gerada uma nova imagem\u003C/p>\n\u003Cp>todas as imagens ficam armazenadas no registry para poderem ser reutilizadas no futuro.\u003C/p>\n\u003Cp>ao executar o Dockerfile, é feito um pull desta imagem\u003C/p>\n\u003Cp>ao efetuar um commit dentro de uma imagem docker, é possível gerar uma imagem nova a partir de uma já existe em execução, tirando proveito dos dados presentes na camada de leitura e escrita, assim feito um push desta imagem (tipo Git, um grande repo de imagens).\u003C/p>\n\u003Ch2 id=\"client---host\">Client - Host\u003C/h2>\n\u003Cul>\n\u003Cli>\n\u003Cp>Host\u003C/p>\n\u003Cul>\n\u003Cli>Daemon - API\u003C/li>\n\u003Cli>Network (entre containers)\u003C/li>\n\u003Cli>Volumes (fora do container, dado persistente)\u003C/li>\n\u003Cli>Cache (registry)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>Client\u003C/p>\n\u003Cul>\n\u003Cli>Containers\u003C/li>\n\u003Cli>Volumes\u003C/li>\n\u003Cli>Network\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>",{"headings":159,"localImagePaths":187,"remoteImagePaths":188,"frontmatter":189,"imagePaths":192},[160,163,166,169,172,175,178,181,184],{"depth":49,"slug":161,"text":162},"o-que-precisamos-entender","O que precisamos entender",{"depth":49,"slug":164,"text":165},"o-que-são-containers","O que são Containers?",{"depth":49,"slug":167,"text":168},"container-runtimes","Container Runtimes",{"depth":68,"slug":170,"text":171},"outras-ferramentas-da-docker-inc","Outras ferramentas da Docker Inc",{"depth":49,"slug":173,"text":174},"namespaces","Namespaces",{"depth":49,"slug":176,"text":177},"cgroups","Cgroups",{"depth":49,"slug":179,"text":180},"overlay-file-systems-ofs","Overlay File Systems (OFS)",{"depth":49,"slug":182,"text":183},"dockerfile","Dockerfile",{"depth":49,"slug":185,"text":186},"client---host","Client - Host",[],[],{"title":148,"pubDate":190,"hero":150,"tags":191},"2025-01-05",[18,119,152],[],"golang-basics",{"id":193,"data":195,"body":201,"filePath":202,"digest":203,"rendered":204},{"title":196,"pubDate":197,"hero":198,"tags":199},"Golang - Guia básico",["Date","2024-09-16T00:00:00.000Z"],"/images/golang.webp",[128,200],"programming languages","## o que veremos aqui\r\n\r\n- [o que veremos aqui](#o-que-veremos-aqui)\r\n- [Características básicas](#características-básicas)\r\n  - [Padrões de uso](#padrões-de-uso)\r\n- [Módulos \\& Pacotes](#módulos--pacotes)\r\n  - [Entrypoint](#entrypoint)\r\n- [Tipos de dados](#tipos-de-dados)\r\n  - [Declarando Valores](#declarando-valores)\r\n  - [Tipos básicos](#tipos-básicos)\r\n  - [STRINGS, RUNES \\& BYTES](#strings-runes--bytes)\r\n  - [Operações matemáticas básicas](#operações-matemáticas-básicas)\r\n- [Estruturas de controle](#estruturas-de-controle)\r\n  - [IF](#if)\r\n  - [Switch-case](#switch-case)\r\n  - [For](#for)\r\n- [Funções](#funções)\r\n  - [Métodos](#métodos)\r\n- [Estruturas de dados](#estruturas-de-dados)\r\n  - [ARRAYS](#arrays)\r\n  - [SLICES](#slices)\r\n  - [MAPS](#maps)\r\n- [Structs \\& Interfaces](#structs--interfaces)\r\n- [Pointers](#pointers)\r\n- [Goroutines](#goroutines)\r\n- [Channels](#channels)\r\n- [Generics](#generics)\r\n\r\n---\r\n\r\n## Características básicas\r\n\r\n- Linguagem compilada direto para binário\r\n- Compilação rápida (porém, binário grande)\r\n- Linguagem pensada para ser simples em sua estrutura\r\n- Projetada para concorrência\r\n- [É possível instalar em qualquer plataforma](http://go.dev/doc/install)\r\n\r\n### Padrões de uso\r\n\r\n- Letra inicial maiúscula em uma função determina que ela será publica ou não\r\n- Não há getters nem setters, porém caso necessário:\r\n  - Declare o campo com letra minuscula\r\n  - Crie um método com o mesmo nome do campo porém com letra maiúscula\r\n  - Desta forma a função será exportada e quem utilizar não verá diferença\r\n  - Para o setter, utilize o padrão SetCampo para alterar o valor do campo caso necessário\r\n- Ao nomear interfaces utilize verbos, Reader, Writer..., assim o método será o substantivo daquele verbo (Read, Write)\r\n- Caso implemente uma conversão para um tipo conhecido, utilize o nome do tipo diretamente exemplo: String() e não ToString()\r\n- Nomes de pacotes dever ser pequenos\r\n- Utilize MixedCaps como padrão, iniciando ou não com maiúscula conforme visibilidade do método ou variável\r\n- estrutura de projeto\r\n\r\n---\r\n\r\n## Módulos & Pacotes\r\n\r\nEm go cada pasta é um pacote e um conjunto de pacotes é um módulo, além disso um módulo deve conter mais 2 arquivos, *go.mod* e *go.sum*\r\n\r\n``` yaml\r\nModulo: Coleção de pacotes\r\n  - Pacote:\r\n    - file.go\r\n  - Pacote:\r\n    - file.go\r\n    - file.go\r\n```\r\n\r\nPara criar um módulo utilizamos o comando *go mod init*\r\n\r\n```sh\r\ngo mod init myModule # ou github.com/\u003Cuser>/\u003Crepo_do_modulo>\r\n```\r\n\r\nE para adicionar dependências no nosso projeto, utilizamos o *go get*\r\n\r\n``` sh\r\ngo get -u github.com/go-chi/chi/v5\r\n```\r\n\r\nComo resultado teremos o arquivo *go.mod* com a declaração das dependências\r\n\r\n``` sh\r\nmodule myModule\r\n\r\ngo 1.23.1 # active version\r\n\r\nrequire github.com/go-chi/chi/v5 v5.1.0 # indirect\r\n```\r\n\r\nE também um arquivo *go.sum* com os checksums das dependências para validação das versões.\r\n\r\n### Entrypoint\r\n\r\nUma aplicação go pode ter mais de um entrypoint identificado pelo arquivo *main.go*, este arquivo deve conter uma função *main()*, caso contrário teremos um erro de compilação.\r\n\r\nUma estrutura comum de ser utilizada em projetos go é ter uma pasta chamada *cmd* e dentro dela subpastas distintas para cara entrypoint diferente da aplicação, pois quando evocado o pacote depois ele terá o nome da pasta e não do arquivo no caso do *main.go*\r\n\r\n``` yaml\r\nmoduleFolder:\r\n  cmd:\r\n    - api:\r\n      - main.go       \r\n    - cli:\r\n      - main.go       \r\n    - client:\r\n      - main.go\r\n    - scripts:\r\n      - main.go\r\n  otherPackages:\r\n    - something.go\r\n```\r\n\r\nmain.go\r\n\r\n``` go\r\npackage main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main(){\r\n  fmt.Println(\"Hello World!\")\r\n}\r\n```\r\n\r\nExecutar um programa go\r\n\r\n``` sh\r\n# somente compilação (vai gerar o binário)\r\ngo build cmd/main.go\r\n# execução do binário\r\n./main\r\n# ou compilar e executar consecutivamente com o comando run\r\ngo run cmd/main.go\r\n```\r\n\r\n\u003Cbr>\r\n\r\n---\r\n\r\n## Tipos de dados\r\n\r\nGo comporta tipos de dados comuns entre várias linguagens porém para quem olha pela primeira vez estranha o fato de existirem tipos específicos para determinadas quantidades de bits como: 8, 16, 32, 64. Porém em casos como o do *int* ou *uint* o tamanho depende da arquitetura do sistema, 32 ou 64 bits.\r\n\r\nOutro ponto que pode ser novo para alguns é termos tipos *unassigned* que são valores sem atribuição de sinal, portanto serão tipos com número sempre positivos,\r\n\r\n### Declarando Valores\r\n\r\nPontos importantes, go é uma linguagem fortemente tipada, que suporta dinâmica, logo, não precisamos definir explicitamente o tipo de dado de uma variável, e nem tanto podemos muda-lo\r\n\r\n``` go\r\nconst myConst // imutável ou constante\r\nvar myVar  // mutável porém de tipagem forte e estática\r\n\r\nmyVar = \"some value\" // tipo inferido (string)\r\nmyVar = 10 // erro, não podemos sobrescrever o tipo\r\n\r\nvar intNum int\r\nanotherInt := 0 // inferência do tipo pelo operador \":=\"\r\n\r\nvar some, other = 1, 2\r\nlook, again := 3, 4 // look = 3, again = 4\r\n```\r\n\r\n### Tipos básicos\r\n\r\n``` yaml\r\nBoolean: \r\n  Default: false\r\n  - bool: true ou false\r\nPonto Flutuante:\r\n  Default: 0.0\r\n  - float32: 32 bits = -3.4e+38 to 3.4e+38\r\n  - float64: 64 bits = -1.7e+308 to +1.7e+308\r\nCarácter:\r\n  Default: 0\r\n  - byte: alias for uint8\r\n  - rune: alias for int32\r\nTexto:\r\n  Default: ''\r\n  - string: coleção de bytes UTF-8\r\nInteiro:\r\n  Default: 0\r\n  - int: tamanho depende da arquitetura do sistema 32 ou 64 bits\r\n  - int8: min -128 | max = -127\r\n  - int16: min = -32768 | max = -32767\r\n  - int32: min = -2147483648 | max = -2147483647\r\n  - int64: min = -9223372036854775808 | max = -9223372036854775807\r\n  - uint: 'u' vem de unassigned (sem atribuição de sinal) \r\n  - uint8: min = 0 | max = -255\r\n  - uint16: min = 0 | max = -65535\r\n  - uint32: min = 0 | max = -4294967295\r\n  - uint64: min = 0 | max = -18446744073709551615\r\n```\r\n\r\n### STRINGS, RUNES & BYTES\r\n\r\nStrings em go são imutáveis e naturalmente UTF-8, e ocupam 7 bits + 1 bit de sinal, porém UTF-8 tem um encoding dinâmico que pode se extender até 32 bits, cobrindo UTF-32, e assim podendo armazenar caracteres chineses, emojis e outros símbolos.\r\n\r\n``` go\r\n// Quebrando linhas com \\n\r\nvar simpleString string = \"Hello \\nworld!\"\r\n// Ou com string templates\r\nvar stringBlock string = `Hello\r\nworld!`\r\n\r\n// Ambos com o mesmo resultado\r\nfmt.Println(simpleString)\r\nfmt.Println(stringBlock)\r\n\r\n// Aqui a coisa começa a ficar estranha\r\nfmt.Println(len(\"atenção\")) // 9 | número de bytes em ASCII 256\r\nfmt.Println(len(\"atencao\")) // 7 | parece estar certo, mas não funciona sempre\r\n\r\n// A forma mais assertiva é utilizando o pacote \"unicode/utf8\"\r\nfmt.Println(utf8.RuneCountInString(\"atenção\")) // resultado correto sempre\r\n\r\n// Outro exemplo\r\nvar myString = \"atenção\"\r\n\r\n// Ao buscar o 'a' teremos o valor correto dele na tabela ascii\r\nvar stringIndex uint8 = myString[0]\r\nfmt.Println(stringIndex) // 97\r\n\r\n// Ao buscar o 'ç' teremos o valor do primeiro byte\r\n// porém como 'ç' precisa de mais de um byte, o valor correto seria 231\r\nvar stringIndex4 uint8 = myString[4]\r\nfmt.Println(stringIndex4) // 167\r\nfor i, v := range myString {\r\n  fmt.Println(i, v)\r\n}\r\n/*\r\n  0 97 \r\n  1 116\r\n  2 101\r\n  3 110 \r\n  4 231 \u003C- 'ç' | ocupa o espaço do 4 e do 5\r\n  6 227 \u003C- 'ã' | ocupa o 6 e o 7\r\n  8 111 \u003C- 'o' | ocupa um espaço só\r\n*/\r\n```\r\n\r\nStrings em go são uma coleção de Runas devido o encoding, ou uma coleção de uint8 se não preservarmos o encoding (caracteres como: ã ficam quebrados se analisarmos desta forma).\r\n\r\n``` go\r\nvar myRune rune = 'a'\r\nfmt.Println(myRune) // 97 | int32 ele imprime o valor numérico\r\n\r\n// Manipulando Strings\r\nvar strSlice = []string{\"H\", \"e\", \"l\", \"l\", \"o\"}\r\nvar concatStr = \"\"\r\nfor i := range strSlice {\r\n  // podemos fazer uma concatenação básica\r\n  // a cada iteração uma nova string será gerada\r\n  concatStr += strSlice[i]\r\n}\r\n\r\nvar strBuilder strings.Builder\r\nfor i := range strSlice {\r\n  // ou usando um string builder, melhor alternativa\r\n  strBuilder.WriteString(strSlice[i])\r\n}\r\nfmt.Println(strBuilder.String())\r\n```\r\n\r\n### Operações matemáticas básicas\r\n\r\nPara cálculos básico nosso principal problema será o overflow de variáveis, escolher devemos escolher os tipos de dados tendo em mente o tamanho do resultado para não termos surpresas inesperadas.\r\n\r\n``` go\r\n// cast é necessário para fazer os cálculo\r\nvar numFloat32 float32 = 10.1\r\nvar numInt32 int32 = 2\r\nvar result float32 = numFloat32 + float32(numInt32)\r\nfmt.Println(result)\r\n\r\nvar numInt1 int = 3\r\nvar numInt2 int = 2\r\nfmt.Println(numInt1 / numInt2) // 1 | arredondamento para int\r\nfmt.Println(numInt1 % numInt2) // 1 | operação com resto de divisão\r\n\r\nvar myBoolean bool = false // como qualquer linguagem, simples\r\n```\r\n\r\n\u003Cbr>\r\n\r\n---\r\n\r\n## Estruturas de controle\r\n\r\nEm go teremos estruturas como 'if', 'switch-case', 'for', (não tem 'while'), e select (veremos em [channels](#channels))\r\n\r\n### IF\r\n\r\n``` go\r\n// if, switch, for, não tem parêntesis\r\nvalue := \"something\"\r\n\r\nif value == \"Hi\" {\r\n  fmt.Println(\"It's hi\")\r\n\r\n  // else if e else, tem que estar na mesma linha das chaves\r\n} else if value != \"something\" {\r\n  fmt.Println(\"it's not something\")\r\n\r\n} else {\r\n  fmt.Println(\"it's \" + value)\r\n}\r\n```\r\n\r\n### Switch-case\r\n\r\n``` go\r\n// no switch, o break é implícito sobre cada condição\r\nswitch {\r\ncase value == \"Hi\":\r\n  fmt.Println(\"It's hi\")\r\n\r\ncase value != \"something\":\r\n  fmt.Println(\"it's not something\")\r\n\r\ndefault:\r\n  fmt.Println(\"it's \" + value)\r\n}\r\n\r\n// ele também pode ser condicional, atribuindo uma variável diretamente\r\nswitch value {\r\ncase \"Hi\":\r\n  fmt.Println(\"It's hi\")\r\n\r\n// podendo validar mais de um valor para cada cenário\r\ncase \"another thing\", \"anything\":\r\n  fmt.Println(\"it's not something\")\r\n\r\ndefault:\r\n  fmt.Println(\"it's \" + value)\r\n}\r\n```\r\n\r\n### For\r\n\r\n``` go\r\n// Loop básico 'while'\r\nvar i int = 0\r\nfor i\u003C10 {\r\n  fmt.Println(i)\r\n  i += 1\r\n}\r\n\r\n// Loop sem condição \r\ni=0 // reset\r\nfor {\r\n  // removendo esse if interno, loop infinito\r\n  if i>=10{\r\n    break\r\n  }\r\n  fmt.Println(i)\r\n  i += 1\r\n}\r\n\r\n// for clássico\r\nfor i=0; i\u003C10; i++ {\r\n  fmt.Println(i)\r\n  i += 1\r\n}\r\n\r\n// for range (ou foreach in range)\r\nintSlice := []int32{1, 2, 3}\r\nfor index, value := range intSlice {\r\n  fmt.Println(\"Index: \" + index + \" Value: \" + value)\r\n}\r\n\r\n// podemos ignorar o índice também\r\nfor _, value := range intSlice {\r\n  fmt.Println(\"Index: \" + index + \" Value: \" + value)\r\n}\r\n```\r\n\r\n\u003Cbr>\r\n\r\n---\r\n\r\n## Funções\r\n\r\n``` go\r\n// Forma comum vista em outras linguagens\r\nfunc functionName(param1 string, param2 int) string {\r\n  return \"result\"\r\n}\r\n\r\n// retornando mais de um resultado\r\nfunc multipleReturns(param1 string, param2 int) (string, int) {\r\n  return \"result\", 10\r\n}\r\n\r\n// ao chamar a função devemos receber os dois dados\r\nvar first, second = multipleReturns(\"something\", 1)\r\n\r\nfunc namedReturn(param1 int, param2 int) (sum int) { \r\n  // sum foi declarado na assinatura do método\r\n  sum = param1 + param2\r\n  return // o retorno vai ser sempre sum \r\n}\r\n\r\nimport \"errors\" // pacote de error da biblioteca padrão\r\n// golang não tem try-catch \r\n// então todos os erros são tratados no retorno da função\r\nfunc withError(wrong bool) bool, error {\r\n  var err error // default: nil\r\n  if wrong {\r\n    err = errors.New(\"Something went wrong\")\r\n  }\r\n  return err, wrong\r\n}\r\n// devemos receber este erro e verificar se ele tem algo\r\nerr, response := withError(true)\r\n// forma padrão de lidar com erros\r\nif err!=nil {\r\n  fmt.Printf(err.Error())\r\n}\r\n\r\n// ou podemos ignorar este erro explicitamente usando '_' \r\n// por padrão devemos retornar primeiro o erro \r\n// para que ele não seja ignorado acidentalmente\r\n_, response2 := withError(false)\r\n```\r\n\r\n### Métodos\r\n\r\nmétodos são funções atribuídas a um tipo de dado (ou objeto) específico.\r\nveja também: [Função ou Método?](/shards/function-or-method)\r\n\r\n``` go\r\n// funções também podem ser atribuídas a objetos\r\nfunc (b ball) roll() {\r\n  b.position++\r\n}\r\n// assim quando declaramos uma nova bola\r\nnewBall := ball.New()\r\n// temos o método novo acessivel a ele\r\n// este design permite estender estruturas de bibliotecas externas\r\n// ou até mesmo da biblioteca padrão\r\n// podemos atribuir métodos novos para o tipo string por exemplo\r\nnewBall.roll()\r\n```\r\n\r\n\u003Cbr>\r\n\r\n---\r\n\r\n## Estruturas de dados\r\n\r\nAssim também como outras linguagens, temos algumas estruturas pré existentes na linguagem como 'Arrays' e 'Maps', porém em go ainda temos os 'slices', que veremos aqui.\r\n\r\n### ARRAYS\r\n\r\n- características:\r\n  - Tamanho fixo\r\n  - mesmo tipo de dados\r\n  - indexável\r\n  - contínuo na memória\r\n\r\n``` go\r\nvar intArr[3]int32\r\nintArr[1] = 123 // atribuindo no index\r\nfmt.Println(intArr[0]) // imprimindo posição 0\r\nfmt.Println(intArr[1:3]) // imprimindo de 1 até 2 (intervalo aberto no 3)\r\n\r\nfmt.Println(&intArr[0]) // imprimindo o endereço de memória\r\nfmt.Println(&intArr[1]) // assim temos como ver que eles ficam\r\nfmt.Println(&intArr[2]) // um do lado do outro\r\n\r\n// poderíamos ter inicializado o array assim também\r\nanotherIntArr := [3]int32{3, 2, 1}\r\nfmt.Println(anotherIntArr[0:3])\r\n```\r\n\r\n### SLICES\r\n\r\n- características:\r\n  - wrapper para array\r\n  - geração pode ser dinâmica\r\n\r\n``` go\r\n// se omitir o tamanho, temos um slice de tamanho dinâmico\r\nintSlice := []int32{1, 2, 3}\r\n\r\n// tamanho do slice, é a quantidade de items, capacidade, é a memória alocada\r\nfmt.Printf(\"O tamanho do array interno é %v porém a capacidade é %v = \", len(intSlice), cap(intSlice)) // 3 & 3\r\nfmt.Println(intSlice)\r\n\r\n// podemos adicionar valores extras\r\nintSlice = append(intSlice, 7)\r\n// ao exceder a capacidade do array original, a capacidade é DOBRADA\r\n// porém não podemos acessar estes valores que estão fora do array\r\nfmt.Printf(\"O tamanho do array é %v porém a capacidade é %v = \", len(intSlice), cap(intSlice)) // 4 & 6\r\nfmt.Println(intSlice)\r\n\r\n// poderíamos criar um novo array especificando tamanho e capacidade\r\n// make é uma função 'fábrica' para os tipos básicos\r\n// int[] é o tipo, 3 o tamanho, 8 a capacidade\r\nvar intSlice2 []int32 = make([]int32, 3, 8)\r\n\r\n// podemos inserir os dados no FIM de outro array via função append com o operador spread (...)\r\nintSlice2[0] = 10\r\nintSlice2 = append(intSlice, intSlice2...) // [10, 0, 0, 1, 2, 3, 7]\r\nfmt.Println(intSlice2)\r\n\r\n// iterando...\r\nfor index, value := range intSlice2 {\r\n  fmt.Println(\"Index: \" + index + \" Value: \" + value)\r\n}\r\n```\r\n\r\n### MAPS\r\n\r\n``` go\r\n// podemos criar um mapa desta forma\r\nvar myMap map[string]uint8 = make(map[string]uint8)\r\nfmt.Println(myMap)\r\n\r\n// ou diretamente atribuindo valores\r\nMyMap2 := map[string]uint8}{\"James\":5 \"Tiberius\":8 \"Kirk\":4 }\r\nfmt.Println(myMap2[\"James\"]) // 7\r\n\r\n// nesse caso, ele retorna o valor padrão do tipo, nesse caso do uint8 é 0\r\nfmt.Println(myMap2[\"Spock\"])\r\n// podemos deletar um valor usando a função delete\r\ndelete(myMap2, \"Tiberius\")\r\n\r\n// para saber se o valor estava no mapa ou ele era realmente 0\r\n// temos um segundo no mapa\r\nvar nameLen, found = myMap2[\"Spock\"] // 0 & false\r\nif  found {\r\n  fmt.Println(\"The name length is \" + nameLen)\r\n}\r\n\r\n// iterando...\r\nfor key, value := range myMap2 {\r\n  fmt.Println(\"Name: \" + key + \" Name length: \" + value)\r\n}\r\n```\r\n\r\n\u003Cbr>\r\n\r\n---\r\n\r\n## Structs & Interfaces\r\n\r\nStructs em go nada mais são do que objeto, que por sua vez, podem conter métodos.\r\nMas go é orientado a objetos? Não necessariamente, em go não existe herança por exemplo.\r\n\r\n``` go\r\n// structs podem ser declaradas de forma anonima\r\n// porém assim não podem ser reutilizadas\r\nvar person = struct{\r\n  name string\r\n  age uint8\r\n}{\"Spock\", 83}\r\n\r\n// desta forma podemos reutilizar esta interface\r\ntype person struct{\r\n  name string\r\n  age uint8\r\n}\r\n\r\n```\r\n\r\nInterfaces por sua vez tem um comportamento mais 'passivo'.\r\n\r\nAo definir as funções de uma interface, toda struct que conter estas funções será considerada compatível com a interface. Desta forma não precisaremos explicitamente atribuir a interface para aquela struct, desta forma podemos trabalhar melhor com bibliotecas externas definindo interfaces que sejam compatíveis com structs já existentes nestas bibliotecas.\r\n\r\n``` go\r\ntype owner struct {\r\n  name string\r\n}\r\n\r\ntype gasCar struct {\r\n  kml     uint8\r\n  tankCap uint8\r\n  owner   // caso tipo e variável tenham o mesmo nome, podemos omitir\r\n}\r\n\r\n// desta forma atribuímos uma função para a struct gasEngine\r\nfunc (e gasCar) kmLeft() uint {\r\n  return uint(e.tankCap) * uint(e.kml)\r\n}\r\n\r\ntype electricCar struct {\r\n  kpkwh      uint8\r\n  batteryCap uint8\r\n  owner      owner // podemos por ambos sem problemas também\r\n}\r\n\r\n// desta forma atribuímos uma função para a struct gasEngine\r\nfunc (e electricCar) kmLeft() uint {\r\n  return uint(e.batteryCap) * uint(e.kpkwh)\r\n}\r\n\r\n// ao declarar a interface, tanto o carro a gasolina quanto o elétrico\r\n// poderão satisfazer este requisito e serem considerados somente carros\r\ntype car interface {\r\n  kmLeft() uint\r\n}\r\n\r\nfunc willReachDestination(c car, distance uint) bool {\r\n  return c.kmLeft() >= distance\r\n}\r\n\r\nfunc main() {\r\n  // uma struct pode ser inicializada desta forma\r\n  var myCar gasCar = gasCar{kml: 15, tankCap: 40, owner: owner{\"Someone\"}}\r\n  // e ser alterada desta forma (pegando estrada né)\r\n  myCar.kml = 20\r\n  fmt.Println(myCar.kmLeft())\r\n\r\n  // nomes de variáveis podem ser omitidos, enviando os parâmetros em ordem\r\n  var myOtherCar electricCar = electricCar{4, 100, owner{\"Someone\"}}\r\n  fmt.Println(myOtherCar.kmLeft())\r\n\r\n  // ao usar a função podemos utilizar ambos os carros\r\n  // pois ambos satisfazem os requisitos da interface\r\n  var distance uint = 500\r\n  fmt.Println(\"Gas Car: \", willReachDestination(myCar, distance))\r\n  fmt.Println(\"Electric car: \", willReachDestination(myOtherCar, distance))\r\n}\r\n```\r\n\r\n\u003Cbr>\r\n\r\n---\r\n\r\n## Pointers\r\n\r\nPonteiros são um tipo especial de dados que armazena (ou 'aponta') um endereço de memória.\r\nPonteiros são identificados por um `*` na declaração da variável.\r\n\r\nVeja também: [Ponteiros](/shards/pointers)\r\n\r\n``` go\r\nvar x int32 = 10\r\n// ao inicializar um ponteiro desta forma, estamos criando um novo valor na memória\r\n// neste caso 0 (default do int32) e armazenando uma referencia para ele em 'a'\r\nvar a *int32 = new(int32)\r\n\r\n// com o '*' antes do ponteiro, estamos de-referenciando\r\n// indo até o espaço de memória que é apontado\r\nfmt.Printf(\"'a' point to the value: %v \\n\", *a)\r\nfmt.Printf(\"'x' value is: %v \\n\", x)\r\n\r\n// caso queira atualizar o valor de 'a' use '*'\r\n// caso contrário, estará atualizando o endereço de memória\r\n*a = 5\r\n\r\nvar y int32 = 70\r\n// '&' é usado para capturar o endereço de memória de uma variável\r\n// neste caso, estamos referenciando a variável 'y'\r\nvar b *int32 = &y\r\nfmt.Printf(\"'b' point to the value: %v \\n\", *b)\r\nfmt.Printf(\"'y' value is: %v \\n\", y)\r\n\r\n// agora como 'b' e 'y' apontam para o mesmo local na memória\r\n// qualquer mudança em no valor de um deles, causa um efeito no outro\r\n*b = 80\r\nfmt.Println(\"updating by reference...\")\r\nfmt.Printf(\"'b' point to the value: %v \\n\", *b)\r\nfmt.Printf(\"'y' value is: %v \\n\", y)\r\n\r\n//e se nao fosse um ponteiro?\r\nc := 2\r\nd := c\r\nfmt.Printf(\"'c' value is: %v \\n\", c)\r\nfmt.Printf(\"'d' value is: %v \\n\", d)\r\n\r\nd = 5\r\nfmt.Println(\"updating by value...\")\r\nfmt.Printf(\"'c' value is: %v \\n\", c)\r\nfmt.Printf(\"'d' value is: %v \\n\", d)\r\n```\r\n\r\n| Variável | Valor    | Endereço |\r\n| -------- | -------- | -------- |\r\n| a        | *0x1b05* | 0x1b00   |\r\n| b        | *0x1b04* | 0x1b01   |\r\n|          |          | 0x1b03   |\r\n| x        | 10       | 0x1b02   |\r\n| y        | 70 -> 80 | *0x1b04* |\r\n|          | 0  ->  5 | *0x1b05* |\r\n\r\nPorém... nem tudo é tão 'simples' assim, no caso de estruturas de dados complexas como *slices* qualquer cópia será por referência dado que  um *slice* nada mais é que um conjunto de ponteiros para um *array*\r\n\r\n``` go\r\nvar slice = []int32{1, 2, 3}\r\nvar sliceCopy = slice\r\n// ao atualizar um, atualizamos o outro\r\nsliceCopy[2] = 4\r\nfmt.Println(slice)\r\nfmt.Println(sliceCopy)\r\n```\r\n\r\nVoltando no ponto sobre atualizar por referência ou por valor, todo parâmetro de função será implicitamente passado por valor, ou seja, ao passarmos um *array* por parâmetro, a função criará uma cópia do *array* original, desta forma DUPLICANDO a memória, o que pode fazer sentido para alguns casos de uso, mas não para todos.\r\n\r\nSendo assim podemos enviar um ponteiro, quando quisermos evitar este tipo de cenário porém tendo em mente que o array possivelmente será modificado, causando efeitos colaterais, desejados ou não.\r\n\r\nNeste exemplo temos duas funções que calculam o valor quadrado, uma recebendo um array/slice por parâmetro e outra um ponteiro para este array/slice.\r\n\r\n``` go\r\nfunc square(thing2 [5]int32) [5]int32 {\r\n fmt.Printf(\"Memory location of thing2: %p \\n\", &thing2)\r\n for i := range thing2 {\r\n  thing2[i] = thing2[i] * thing2[i]\r\n }\r\n return thing2\r\n}\r\n\r\nfunc squareRef(thing3 *[5]int32) [5]int32 {\r\n // aqui nao precisa do '&' esta variável já é um ponteiro\r\n // usando '&' o resultado será o endereço do ponteiro (ponteiro do ponteiro)\r\n fmt.Printf(\"Memory location of thing3: %p \\n\", thing3)\r\n for i := range thing3 {\r\n  thing3[i] = thing3[i] * thing3[i]\r\n }\r\n return *thing3\r\n}\r\n```\r\n\r\nAo executarmos ambas as funções podemos ver na prática esta diferença na memória\r\n\r\n``` go\r\nvar thing1 = [5]int32{1, 2, 3, 4, 5}\r\nfmt.Printf(\"Memory location of thing1: %p \\n\", &thing1)\r\n\r\nvar resultSquare [5]int32 = square(thing1)\r\nfmt.Printf(\"Result value: %v \\n\", resultSquare)\r\nfmt.Printf(\"thing1 value: %v \\n\", thing1)\r\n\r\nvar resultSquareRef [5]int32 = squareRef(&thing1)\r\nfmt.Printf(\"Result ref value: %v \\n\", resultSquareRef)\r\nfmt.Printf(\"thing1 new value: %v \\n\", thing1)\r\n\r\n\\*\r\nMemory location of thing1: 0xc0000200c0 \r\nMemory location of thing2: 0xc0000200d8 \r\nResult value: [1 4 9 16 25] \r\nthing1 value: [1 2 3 4 5]\r\n\r\nMemory location of thing3: 0xc0000200c0 \r\nResult ref value: [1 4 9 16 25] \r\nthing1 new value: [1 4 9 16 25] \r\n*\\\r\n```\r\n\r\n\u003Cbr>\r\n\r\n---\r\n\r\n## Goroutines\r\n\r\nPrimeira coisa a ser comentada sobre Goroutines é, Goroutine é uma ferramenta de concorrência e não paralelismo. Caso este assunto cause alguma confusão ainda na sua cabeça, tente [dar uma olhada aqui antes](/shards/concurrency-is-not-parallelism).\r\n\r\nAlguns pontos sobre Goroutines\r\n\r\n- Não são threads, são bem mais leves\r\n- São gerenciadas pelo scheduler interno do go e não pelo Sistema operacional\r\n- É um modelo concorrente, podendo também ser paralelo (mas não necessariamente)\r\n\r\nGoroutines são disparadas/agendadas em background através da palavra chave *go* antes da chamada,\r\nno exemplo abaixo utilizamos o *go* antes da chamada à função *dbCall(i)*, desta forma a execução da função vai acontecer de forma concorrente.\r\n\r\nPorém ao analisar o código você também notará algo a mais de novo: O *WaitGroup*, nada mais é do que uma ferramenta de sincronização de Goroutines. Adicionamos ao contador do WaitGroup o número de Goroutines que estamos esperando ser concluídas, e chamamos o *Done()* para decrementar este valor que deve resultar em zero (se não der zero, teremos problemas), Assim garantimos que o programa irá aguardar que todas as Goroutines agendadas terminem\r\n\r\n``` go\r\nvar wg = sync.WaitGroup{}\r\nvar dbData = []string{\"ID[1]\", \"ID[2]\", \"ID[3]\", \"ID[4]\", \"ID[5]\"}\r\n\r\nfunc main() {\r\n t0 := time.Now()\r\n for i := 0; i \u003C len(dbData); i++ {\r\n  // adiciona 1 ao contador\r\n  wg.Add(1)\r\n  go dbCall(i)\r\n }\r\n wg.Wait()\r\n fmt.Printf(\"Total execution time: %v \\n\", time.Since(t0))\r\n}\r\n\r\n// simulando delay da chamada ao banco\r\nfunc dbCall(i int) {\r\n var delay float32 = rand.Float32() * 2000\r\n time.Sleep(time.Duration(delay) * time.Millisecond)\r\n fmt.Println(\"Result from DB:\", dbData[i])\r\n // remove 1 do contador\r\n wg.Done()\r\n}\r\n```\r\n\r\nOk, legal!\r\n\r\nMas se eu precisar armazenar esse resultado em algum lugar? Preciso saber a ordem com que os processos terminaram de executar, Como lidar com a condição de corrida?\r\n\r\nGo assim como grande parte das linguagens de programação, implementa tanto o *Mutex* quanto o *Semaphore* para estes casos.\r\n\r\n``` go\r\nvar m = sync.Mutex{}\r\nvar wg = sync.WaitGroup{}\r\nvar dbData = []string{\"ID[1]\", \"ID[2]\", \"ID[3]\", \"ID[4]\", \"ID[5]\"}\r\nvar results = []string{}\r\n\r\nfunc main() {\r\n t0 := time.Now()\r\n for i := 0; i \u003C len(dbData); i++ {\r\n  // adiciona 1 ao contador\r\n  wg.Add(1)\r\n  go dbCall(i)\r\n }\r\n wg.Wait()\r\n fmt.Printf(\"Total execution time: %v \\n\", time.Since(t0))\r\n fmt.Printf(\"The results are: %v \\n\", results)\r\n}\r\n\r\n// simulando delay da chamada ao banco\r\nfunc dbCall(i int) {\r\n // fixando o tempo para forçar cenários concorrentes\r\n var delay float32 = 2000\r\n time.Sleep(time.Duration(delay) * time.Millisecond)\r\n fmt.Println(\"Result from DB:\", dbData[i])\r\n save(dbData[i])\r\n // remove 1 do contador\r\n wg.Done()\r\n}\r\n\r\nfunc save(result string) {\r\n // bloqueando a escrita para evitar condição de corrida\r\n m.Lock()\r\n results = append(results, result)\r\n // liberando o acesso para outras Goroutines\r\n m.Unlock()\r\n}\r\n```\r\n\r\nAgora sim, funcionando bem, mas... e se eu quiser ir logando conforme os valores são inseridos?\r\n\r\nO *Mutex* em go tem uma funcionalidade a mais, utilizando um *RWMutex* mutex de leitura e escrita, podemos especificar se nosso lock será somente de leitura ou não\r\n\r\n``` go\r\nvar m = sync.RWMutex{}\r\nvar wg = sync.WaitGroup{}\r\nvar dbData = []string{\"ID[1]\", \"ID[2]\", \"ID[3]\", \"ID[4]\", \"ID[5]\"}\r\nvar results = []string{}\r\n\r\nfunc main() {\r\n t0 := time.Now()\r\n for i := 0; i \u003C len(dbData); i++ {\r\n  // adiciona 1 ao contador\r\n  wg.Add(1)\r\n  go dbCall(i)\r\n }\r\n wg.Wait()\r\n fmt.Printf(\"Total execution time: %v \\n\", time.Since(t0))\r\n}\r\n\r\n// simulate DB call delay\r\nfunc dbCall(i int) {\r\n // fixando o tempo para forçar cenários concorrentes\r\n var delay float32 = 2000\r\n time.Sleep(time.Duration(delay) * time.Millisecond)\r\n save(dbData[i])\r\n log()\r\n // remove 1 do contador\r\n wg.Done()\r\n}\r\n\r\nfunc save(result string) {\r\n // bloqueando a escrita para evitar condição de corrida\r\n m.Lock()\r\n results = append(results, result)\r\n // liberando o acesso para outras Goroutines\r\n m.Unlock()\r\n}\r\n\r\nfunc log() {\r\n // bloqueia somente a leitura\r\n m.RLock()\r\n fmt.Printf(\"Current results: %v \\n\", results)\r\n // desbloqueia a leitura\r\n m.RUnlock()\r\n}\r\n```\r\n\r\nBom, isso é o básico para mexer com Goroutines, para fazer mais que isso precisamos dar uma olhada em *Channels*\r\n\r\n---\r\n\r\n## Channels\r\n\r\nO que é isso? São canais de comunicação, desenhados para trabalhar com Goroutines.\r\n\r\nO que isso faz?\r\n\r\n- Escuta/espera por dados\r\n- Armazena dados\r\n- Formato FIFO (fila)\r\n- Thread safe\r\n\r\nVamos ver como declarar e utilizar os channels\r\n\r\n``` go\r\n// Declarando um channel de tamanho 1\r\nvar ch1 = make(chan int)\r\n// adicionando o valor 1 no channel ch1=[1]\r\n// Exatamente aqui, teremos um lock\r\nch1 \u003C- 1\r\n// removendo o primeiro valor do channel e armazenando na variável\r\nvar i = \u003C-ch1\r\n// criando um channel com um valor inicial pré determinado\r\nvar ch2 = make(chan int, 10)\r\nch2 \u003C- i\r\n// ERRO\r\nfmt.Println(\"Valor processado:\", \u003C-ch2)\r\n```\r\n\r\nComo channels foram desenhadas para trabalhar junto com Goroutines, no momento em que um valor é inserido no canal, o processo irá parar, resultando em um DeadLock, para corrigir isto, teremos que fazer da seguinte forma:\r\n\r\n``` go\r\nfunc main() {\r\n var c = make(chan int)\r\n go process(c)\r\n fmt.Println(\"Valor processado:\", \u003C-c)\r\n}\r\n\r\nfunc process(c chan int) {\r\n c \u003C- 1\r\n}\r\n```\r\n\r\nOK, mas... e se eu não souber quantos valores vão estar no meu channel e quiser ficar escutando ele até que ele termine?\r\n\r\nPodemos utilizar os channels dentro de *for-range*, porém caso o channel não for fechado corretamente, teremos novamente um Deadlock, então não esqueça de usar o *close* no channel\r\n\r\n``` go\r\nfunc main() {\r\n  // Inicializando o chan com 5 irá liberar espaço para a execução toda neste caso\r\n  // teste removendo o 5 e veja o que muda\r\n var c = make(chan int, 5)\r\n go process(c)\r\n for i := range c {\r\n  fmt.Println(\"Valor processado:\", i)\r\n }\r\n fmt.Println(\"Fim do processamento\")\r\n}\r\n\r\nfunc process(c chan int) {\r\n  // defer??? é uma palavra reservada\r\n  // uma expressão que será executada no momento antes da função terminar\r\n defer close(c)\r\n for i := 0; i \u003C 5; i++ {\r\n  c \u003C- i\r\n }\r\n}\r\n```\r\n\r\nOutra ferramenta útil é o *select*, que funciona como um *switch* para channels\r\n\r\n``` go\r\nfunc main() {\r\n oddChan := make(chan int)\r\n pairChan := make(chan int)\r\n numbers := []int{1, 3, 6, 8, 9, 10}\r\n\r\n for i := range numbers {\r\n  go processNumber(numbers[i], oddChan, pairChan)\r\n }\r\n for range numbers {\r\n  results(oddChan, pairChan)\r\n }\r\n\r\n}\r\n\r\nfunc results(oddChan chan int, pairChan chan int) {\r\n select {\r\n case value := \u003C-oddChan:\r\n  fmt.Println(\"Valor ímpar encontrado:\", value)\r\n case value := \u003C-pairChan:\r\n  fmt.Println(\"Valor Par encontrado:\", value)\r\n }\r\n}\r\n\r\nfunc processNumber(number int, oddChan chan int, pairChan chan int) {\r\n if number%2 > 0 {\r\n  oddChan \u003C- number\r\n } else {\r\n  pairChan \u003C- number\r\n }\r\n}\r\n```\r\n\r\n\u003Cbr>\r\n\r\n---\r\n\r\n## Generics\r\n\r\nTipos genéricos demoraram um pouco para entrar na linguagem devido o uso de interfaces em go, porém o uso de tipos genéricos dão muito mais flexibilidade para o código\r\n\r\n``` go\r\nfunc main() {\r\n intSlice := []int{1, 3, 6, 8, 9, 10}\r\n intSum := processNumbers(intSlice)\r\n fmt.Println(\"Sum of Integers:\", intSum)\r\n\r\n floatSlice := []float32{1.2, 3.1, 6.4, 8.3, 9.2, 10.8}\r\n floatSum := processNumbers(floatSlice)\r\n fmt.Println(\"Sum of Floats:\", floatSum)\r\n}\r\n\r\n// Aqui definimos que o tipo T pode ser [int | float32 | float64]\r\n// podemos utilizar o any também assim como outras linguagens como Typescript\r\n// outro detalhe any nada mais é do que um alias para uma interface vazia :P\r\nfunc processNumbers[T int | float32 | float64](slice []T) T {\r\n  sum:= 0\r\n for _, v := range slice {\r\n  sum += v\r\n }\r\n return sum\r\n}\r\n```\r\n\r\nLembra do exemplo de interfaces com structs? vamos adapta-lo para utilizar tipos genéricos, porém fica um pouco mais complicado.\r\n\r\n``` go\r\ntype electricCar struct {\r\n kpkwh      uint8\r\n batteryCap uint8\r\n}\r\n\r\nfunc (e electricCar) kmLeft() uint {\r\n return uint(e.batteryCap) * uint(e.kpkwh)\r\n}\r\n\r\ntype car[T gasCar | electricCar] struct {\r\n owner\r\n engine T\r\n}\r\n\r\ntype engine interface {\r\n kmLeft() uint\r\n}\r\n\r\nfunc willReachDestination(e engine, distance uint) bool {\r\n return e.kmLeft() >= distance\r\n}\r\n\r\nfunc main() {\r\n // uma struct pode ser inicializada desta forma\r\n var myCar car[gasCar] = car[gasCar]{owner: owner{\"Someone\"}, engine: gasCar{kml: 15, tankCap: 40}}\r\n // e ser alterada desta forma\r\n myCar.engine.kml = 20\r\n fmt.Println(myCar.engine.kmLeft())\r\n\r\n // nomes de variáveis podem ser omitidos, enviando os parâmetros em ordem\r\n var myOtherCar car[electricCar] = car[electricCar]{owner{\"Someone\"}, electricCar{4, 100}}\r\n fmt.Println(myOtherCar.engine.kmLeft())\r\n\r\n // ao usar a função podemos utilizar ambos os carros\r\n // pois ambos satisfazem os requisitos da interface\r\n var distance uint = 500\r\n fmt.Println(\"Gas Car: \", willReachDestination(myCar.engine, distance))\r\n fmt.Println(\"Electric car: \", willReachDestination(myOtherCar.engine, distance))\r\n}\r\n```\r\n\r\n\u003Cbr>\r\n\r\nFim✨, do básico até o não tão básico, cobrindo grande parte das estruturas da linguagem. Espero ter ajudado pelo menos um pouco no entendimento de como utilizar Golang","src/content/notes/golang-basics.md","01accaf013ad3191",{"html":205,"metadata":206},"\u003Ch2 id=\"o-que-veremos-aqui\">o que veremos aqui\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#o-que-veremos-aqui\">o que veremos aqui\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#caracter%C3%ADsticas-b%C3%A1sicas\">Características básicas\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#padr%C3%B5es-de-uso\">Padrões de uso\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#m%C3%B3dulos--pacotes\">Módulos &#x26; Pacotes\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#entrypoint\">Entrypoint\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#tipos-de-dados\">Tipos de dados\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#declarando-valores\">Declarando Valores\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#tipos-b%C3%A1sicos\">Tipos básicos\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#strings-runes--bytes\">STRINGS, RUNES &#x26; BYTES\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#opera%C3%A7%C3%B5es-matem%C3%A1ticas-b%C3%A1sicas\">Operações matemáticas básicas\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#estruturas-de-controle\">Estruturas de controle\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#if\">IF\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#switch-case\">Switch-case\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#for\">For\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#fun%C3%A7%C3%B5es\">Funções\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#m%C3%A9todos\">Métodos\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#estruturas-de-dados\">Estruturas de dados\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#arrays\">ARRAYS\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#slices\">SLICES\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#maps\">MAPS\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#structs--interfaces\">Structs &#x26; Interfaces\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#pointers\">Pointers\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#goroutines\">Goroutines\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#channels\">Channels\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#generics\">Generics\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"características-básicas\">Características básicas\u003C/h2>\n\u003Cul>\n\u003Cli>Linguagem compilada direto para binário\u003C/li>\n\u003Cli>Compilação rápida (porém, binário grande)\u003C/li>\n\u003Cli>Linguagem pensada para ser simples em sua estrutura\u003C/li>\n\u003Cli>Projetada para concorrência\u003C/li>\n\u003Cli>\u003Ca href=\"http://go.dev/doc/install\">É possível instalar em qualquer plataforma\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"padrões-de-uso\">Padrões de uso\u003C/h3>\n\u003Cul>\n\u003Cli>Letra inicial maiúscula em uma função determina que ela será publica ou não\u003C/li>\n\u003Cli>Não há getters nem setters, porém caso necessário:\n\u003Cul>\n\u003Cli>Declare o campo com letra minuscula\u003C/li>\n\u003Cli>Crie um método com o mesmo nome do campo porém com letra maiúscula\u003C/li>\n\u003Cli>Desta forma a função será exportada e quem utilizar não verá diferença\u003C/li>\n\u003Cli>Para o setter, utilize o padrão SetCampo para alterar o valor do campo caso necessário\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Ao nomear interfaces utilize verbos, Reader, Writer…, assim o método será o substantivo daquele verbo (Read, Write)\u003C/li>\n\u003Cli>Caso implemente uma conversão para um tipo conhecido, utilize o nome do tipo diretamente exemplo: String() e não ToString()\u003C/li>\n\u003Cli>Nomes de pacotes dever ser pequenos\u003C/li>\n\u003Cli>Utilize MixedCaps como padrão, iniciando ou não com maiúscula conforme visibilidade do método ou variável\u003C/li>\n\u003Cli>estrutura de projeto\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"módulos--pacotes\">Módulos &#x26; Pacotes\u003C/h2>\n\u003Cp>Em go cada pasta é um pacote e um conjunto de pacotes é um módulo, além disso um módulo deve conter mais 2 arquivos, \u003Cem>go.mod\u003C/em> e \u003Cem>go.sum\u003C/em>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"yaml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">Modulo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">Coleção de pacotes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">Pacote\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#9ECBFF\">file.go\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">Pacote\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#9ECBFF\">file.go\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#9ECBFF\">file.go\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Para criar um módulo utilizamos o comando \u003Cem>go mod init\u003C/em>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">go\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> mod\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> init\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> myModule\u003C/span>\u003Cspan style=\"color:#6A737D\"> # ou github.com/&#x3C;user>/&#x3C;repo_do_modulo>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>E para adicionar dependências no nosso projeto, utilizamos o \u003Cem>go get\u003C/em>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">go\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> get\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -u\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> github.com/go-chi/chi/v5\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Como resultado teremos o arquivo \u003Cem>go.mod\u003C/em> com a declaração das dependências\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">module\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> myModule\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">go\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1.23.1\u003C/span>\u003Cspan style=\"color:#6A737D\"> # active version\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">require\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> github.com/go-chi/chi/v5\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> v5.1.0\u003C/span>\u003Cspan style=\"color:#6A737D\"> # indirect\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>E também um arquivo \u003Cem>go.sum\u003C/em> com os checksums das dependências para validação das versões.\u003C/p>\n\u003Ch3 id=\"entrypoint\">Entrypoint\u003C/h3>\n\u003Cp>Uma aplicação go pode ter mais de um entrypoint identificado pelo arquivo \u003Cem>main.go\u003C/em>, este arquivo deve conter uma função \u003Cem>main()\u003C/em>, caso contrário teremos um erro de compilação.\u003C/p>\n\u003Cp>Uma estrutura comum de ser utilizada em projetos go é ter uma pasta chamada \u003Cem>cmd\u003C/em> e dentro dela subpastas distintas para cara entrypoint diferente da aplicação, pois quando evocado o pacote depois ele terá o nome da pasta e não do arquivo no caso do \u003Cem>main.go\u003C/em>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"yaml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">moduleFolder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  cmd\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#85E89D\">api\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      - \u003C/span>\u003Cspan style=\"color:#9ECBFF\">main.go\u003C/span>\u003Cspan style=\"color:#E1E4E8\">       \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#85E89D\">cli\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      - \u003C/span>\u003Cspan style=\"color:#9ECBFF\">main.go\u003C/span>\u003Cspan style=\"color:#E1E4E8\">       \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#85E89D\">client\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      - \u003C/span>\u003Cspan style=\"color:#9ECBFF\">main.go\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#85E89D\">scripts\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      - \u003C/span>\u003Cspan style=\"color:#9ECBFF\">main.go\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  otherPackages\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#9ECBFF\">something.go\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>main.go\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">package\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#B392F0\">fmt\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(){\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Hello World!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Executar um programa go\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># somente compilação (vai gerar o binário)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">go\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> build\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> cmd/main.go\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># execução do binário\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">./main\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># ou compilar e executar consecutivamente com o comando run\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">go\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> cmd/main.go\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Chr>\n\u003Ch2 id=\"tipos-de-dados\">Tipos de dados\u003C/h2>\n\u003Cp>Go comporta tipos de dados comuns entre várias linguagens porém para quem olha pela primeira vez estranha o fato de existirem tipos específicos para determinadas quantidades de bits como: 8, 16, 32, 64. Porém em casos como o do \u003Cem>int\u003C/em> ou \u003Cem>uint\u003C/em> o tamanho depende da arquitetura do sistema, 32 ou 64 bits.\u003C/p>\n\u003Cp>Outro ponto que pode ser novo para alguns é termos tipos \u003Cem>unassigned\u003C/em> que são valores sem atribuição de sinal, portanto serão tipos com número sempre positivos,\u003C/p>\n\u003Ch3 id=\"declarando-valores\">Declarando Valores\u003C/h3>\n\u003Cp>Pontos importantes, go é uma linguagem fortemente tipada, que suporta dinâmica, logo, não precisamos definir explicitamente o tipo de dado de uma variável, e nem tanto podemos muda-lo\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> myConst\u003C/span>\u003Cspan style=\"color:#6A737D\"> // imutável ou constante\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myVar  \u003C/span>\u003Cspan style=\"color:#6A737D\">// mutável porém de tipagem forte e estática\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">myVar \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"some value\"\u003C/span>\u003Cspan style=\"color:#6A737D\"> // tipo inferido (string)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">myVar \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 10\u003C/span>\u003Cspan style=\"color:#6A737D\"> // erro, não podemos sobrescrever o tipo\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> intNum \u003C/span>\u003Cspan style=\"color:#F97583\">int\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">anotherInt \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#6A737D\"> // inferência do tipo pelo operador \":=\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> some, other \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">look, again \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#6A737D\"> // look = 3, again = 4\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"tipos-básicos\">Tipos básicos\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"yaml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">Boolean\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  Default\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">bool\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">true ou false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">Ponto Flutuante\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  Default\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">float32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">32 bits = -3.4e+38 to 3.4e+38\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">float64\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">64 bits = -1.7e+308 to +1.7e+308\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">Carácter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  Default\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">byte\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">alias for uint8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">rune\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">alias for int32\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">Texto\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  Default\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">''\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">coleção de bytes UTF-8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">Inteiro\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  Default\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">tamanho depende da arquitetura do sistema 32 ou 64 bits\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">int8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">min -128 | max = -127\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">int16\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">min = -32768 | max = -32767\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">min = -2147483648 | max = -2147483647\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">int64\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">min = -9223372036854775808 | max = -9223372036854775807\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'u'\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> vem de unassigned (sem atribuição de sinal)\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">uint8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">min = 0 | max = -255\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">uint16\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">min = 0 | max = -65535\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">uint32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">min = 0 | max = -4294967295\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">uint64\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">min = 0 | max = -18446744073709551615\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"strings-runes--bytes\">STRINGS, RUNES &#x26; BYTES\u003C/h3>\n\u003Cp>Strings em go são imutáveis e naturalmente UTF-8, e ocupam 7 bits + 1 bit de sinal, porém UTF-8 tem um encoding dinâmico que pode se extender até 32 bits, cobrindo UTF-32, e assim podendo armazenar caracteres chineses, emojis e outros símbolos.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Quebrando linhas com \\n\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> simpleString \u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hello \u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">world!\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Ou com string templates\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> stringBlock \u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> `Hello\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">world!`\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Ambos com o mesmo resultado\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(simpleString)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(stringBlock)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Aqui a coisa começa a ficar estranha\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">len\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"atenção\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 9 | número de bytes em ASCII 256\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">len\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"atencao\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 7 | parece estar certo, mas não funciona sempre\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// A forma mais assertiva é utilizando o pacote \"unicode/utf8\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(utf8.\u003C/span>\u003Cspan style=\"color:#B392F0\">RuneCountInString\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"atenção\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)) \u003C/span>\u003Cspan style=\"color:#6A737D\">// resultado correto sempre\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Outro exemplo\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myString \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"atenção\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Ao buscar o 'a' teremos o valor correto dele na tabela ascii\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> stringIndex \u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myString[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(stringIndex) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 97\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Ao buscar o 'ç' teremos o valor do primeiro byte\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// porém como 'ç' precisa de mais de um byte, o valor correto seria 231\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> stringIndex4 \u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myString[\u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(stringIndex4) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 167\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i, v \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myString {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(i, v)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">/*\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  0 97 \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  1 116\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  2 101\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  3 110 \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  4 231 &#x3C;- 'ç' | ocupa o espaço do 4 e do 5\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  6 227 &#x3C;- 'ã' | ocupa o 6 e o 7\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  8 111 &#x3C;- 'o' | ocupa um espaço só\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">*/\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Strings em go são uma coleção de Runas devido o encoding, ou uma coleção de uint8 se não preservarmos o encoding (caracteres como: ã ficam quebrados se analisarmos desta forma).\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myRune \u003C/span>\u003Cspan style=\"color:#F97583\">rune\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '\u003C/span>\u003Cspan style=\"color:#79B8FF\">a\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myRune) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 97 | int32 ele imprime o valor numérico\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Manipulando Strings\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> strSlice \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"H\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"e\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"l\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"l\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"o\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> concatStr \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> strSlice {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // podemos fazer uma concatenação básica\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // a cada iteração uma nova string será gerada\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  concatStr \u003C/span>\u003Cspan style=\"color:#F97583\">+=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> strSlice[i]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> strBuilder \u003C/span>\u003Cspan style=\"color:#B392F0\">strings\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">Builder\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> strSlice {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // ou usando um string builder, melhor alternativa\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  strBuilder.\u003C/span>\u003Cspan style=\"color:#B392F0\">WriteString\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(strSlice[i])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(strBuilder.\u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"operações-matemáticas-básicas\">Operações matemáticas básicas\u003C/h3>\n\u003Cp>Para cálculos básico nosso principal problema será o overflow de variáveis, escolher devemos escolher os tipos de dados tendo em mente o tamanho do resultado para não termos surpresas inesperadas.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// cast é necessário para fazer os cálculo\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numFloat32 \u003C/span>\u003Cspan style=\"color:#F97583\">float32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 10.1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numInt32 \u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">float32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numFloat32 \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#F97583\"> float32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(numInt32)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numInt1 \u003C/span>\u003Cspan style=\"color:#F97583\">int\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numInt2 \u003C/span>\u003Cspan style=\"color:#F97583\">int\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(numInt1 \u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numInt2) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 1 | arredondamento para int\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(numInt1 \u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numInt2) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 1 | operação com resto de divisão\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myBoolean \u003C/span>\u003Cspan style=\"color:#F97583\">bool\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003Cspan style=\"color:#6A737D\"> // como qualquer linguagem, simples\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Chr>\n\u003Ch2 id=\"estruturas-de-controle\">Estruturas de controle\u003C/h2>\n\u003Cp>Em go teremos estruturas como ‘if’, ‘switch-case’, ‘for’, (não tem ‘while’), e select (veremos em \u003Ca href=\"#channels\">channels\u003C/a>)\u003C/p>\n\u003Ch3 id=\"if\">IF\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// if, switch, for, não tem parêntesis\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">value \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"something\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value \u003C/span>\u003Cspan style=\"color:#F97583\">==\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hi\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"It's hi\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // else if e else, tem que estar na mesma linha das chaves\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">} \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#F97583\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value \u003C/span>\u003Cspan style=\"color:#F97583\">!=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"something\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"it's not something\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">} \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"it's \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"switch-case\">Switch-case\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// no switch, o break é implícito sobre cada condição\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">switch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">case\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value \u003C/span>\u003Cspan style=\"color:#F97583\">==\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hi\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"It's hi\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">case\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value \u003C/span>\u003Cspan style=\"color:#F97583\">!=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"something\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"it's not something\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">default\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"it's \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ele também pode ser condicional, atribuindo uma variável diretamente\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">switch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">case\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hi\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"It's hi\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// podendo validar mais de um valor para cada cenário\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">case\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"another thing\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"anything\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"it's not something\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">default\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"it's \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"for\">For\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Loop básico 'while'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">int\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(i)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  i \u003C/span>\u003Cspan style=\"color:#F97583\">+=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Loop sem condição \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">i\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#6A737D\"> // reset\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // removendo esse if interno, loop infinito\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i\u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    break\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(i)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  i \u003C/span>\u003Cspan style=\"color:#F97583\">+=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// for clássico\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; i\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; i\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(i)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  i \u003C/span>\u003Cspan style=\"color:#F97583\">+=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// for range (ou foreach in range)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">intSlice \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> index, value \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> intSlice {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Index: \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> index \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \" Value: \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// podemos ignorar o índice também\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _, value \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> intSlice {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Index: \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> index \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \" Value: \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Chr>\n\u003Ch2 id=\"funções\">Funções\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Forma comum vista em outras linguagens\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> functionName\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">param1\u003C/span>\u003Cspan style=\"color:#F97583\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">param2\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"result\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// retornando mais de um resultado\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> multipleReturns\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">param1\u003C/span>\u003Cspan style=\"color:#F97583\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">param2\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) (\u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"result\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ao chamar a função devemos receber os dois dados\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> first, second \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> multipleReturns\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"something\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> namedReturn\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">param1\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">param2\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) (\u003C/span>\u003Cspan style=\"color:#FFAB70\">sum\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) { \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // sum foi declarado na assinatura do método\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  sum \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> param1 \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> param2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#6A737D\"> // o retorno vai ser sempre sum \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#B392F0\">errors\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#6A737D\"> // pacote de error da biblioteca padrão\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// golang não tem try-catch \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// então todos os erros são tratados no retorno da função\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> withError\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">wrong\u003C/span>\u003Cspan style=\"color:#F97583\"> bool\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">bool\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">error\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> err \u003C/span>\u003Cspan style=\"color:#F97583\">error\u003C/span>\u003Cspan style=\"color:#6A737D\"> // default: nil\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> wrong {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    err \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> errors.\u003C/span>\u003Cspan style=\"color:#B392F0\">New\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Something went wrong\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> err, wrong\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// devemos receber este erro e verificar se ele tem algo\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">err, response \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#B392F0\"> withError\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// forma padrão de lidar com erros\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> err\u003C/span>\u003Cspan style=\"color:#F97583\">!=\u003C/span>\u003Cspan style=\"color:#79B8FF\">nil\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(err.\u003C/span>\u003Cspan style=\"color:#B392F0\">Error\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ou podemos ignorar este erro explicitamente usando '_' \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// por padrão devemos retornar primeiro o erro \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// para que ele não seja ignorado acidentalmente\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">_, response2 \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#B392F0\"> withError\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">false\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"métodos\">Métodos\u003C/h3>\n\u003Cp>métodos são funções atribuídas a um tipo de dado (ou objeto) específico.\r\nveja também: \u003Ca href=\"/shards/function-or-method\">Função ou Método?\u003C/a>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// funções também podem ser atribuídas a objetos\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">b \u003C/span>\u003Cspan style=\"color:#B392F0\">ball\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#B392F0\">roll\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  b.position\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// assim quando declaramos uma nova bola\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">newBall \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ball.\u003C/span>\u003Cspan style=\"color:#B392F0\">New\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// temos o método novo acessivel a ele\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// este design permite estender estruturas de bibliotecas externas\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ou até mesmo da biblioteca padrão\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// podemos atribuir métodos novos para o tipo string por exemplo\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">newBall.\u003C/span>\u003Cspan style=\"color:#B392F0\">roll\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Chr>\n\u003Ch2 id=\"estruturas-de-dados\">Estruturas de dados\u003C/h2>\n\u003Cp>Assim também como outras linguagens, temos algumas estruturas pré existentes na linguagem como ‘Arrays’ e ‘Maps’, porém em go ainda temos os ‘slices’, que veremos aqui.\u003C/p>\n\u003Ch3 id=\"arrays\">ARRAYS\u003C/h3>\n\u003Cul>\n\u003Cli>características:\n\u003Cul>\n\u003Cli>Tamanho fixo\u003C/li>\n\u003Cli>mesmo tipo de dados\u003C/li>\n\u003Cli>indexável\u003C/li>\n\u003Cli>contínuo na memória\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> intArr[\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">intArr[\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 123\u003C/span>\u003Cspan style=\"color:#6A737D\"> // atribuindo no index\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intArr[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]) \u003C/span>\u003Cspan style=\"color:#6A737D\">// imprimindo posição 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intArr[\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]) \u003C/span>\u003Cspan style=\"color:#6A737D\">// imprimindo de 1 até 2 (intervalo aberto no 3)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">intArr[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]) \u003C/span>\u003Cspan style=\"color:#6A737D\">// imprimindo o endereço de memória\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">intArr[\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]) \u003C/span>\u003Cspan style=\"color:#6A737D\">// assim temos como ver que eles ficam\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">intArr[\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]) \u003C/span>\u003Cspan style=\"color:#6A737D\">// um do lado do outro\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// poderíamos ter inicializado o array assim também\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">anotherIntArr \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(anotherIntArr[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">])\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"slices\">SLICES\u003C/h3>\n\u003Cul>\n\u003Cli>características:\n\u003Cul>\n\u003Cli>wrapper para array\u003C/li>\n\u003Cli>geração pode ser dinâmica\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// se omitir o tamanho, temos um slice de tamanho dinâmico\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">intSlice \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// tamanho do slice, é a quantidade de items, capacidade, é a memória alocada\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"O tamanho do array interno é \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> porém a capacidade é \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> = \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#B392F0\">len\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intSlice), \u003C/span>\u003Cspan style=\"color:#B392F0\">cap\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intSlice)) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 3 &#x26; 3\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intSlice)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// podemos adicionar valores extras\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">intSlice \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> append\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intSlice, \u003C/span>\u003Cspan style=\"color:#79B8FF\">7\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ao exceder a capacidade do array original, a capacidade é DOBRADA\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// porém não podemos acessar estes valores que estão fora do array\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"O tamanho do array é \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> porém a capacidade é \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> = \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#B392F0\">len\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intSlice), \u003C/span>\u003Cspan style=\"color:#B392F0\">cap\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intSlice)) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 4 &#x26; 6\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intSlice)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// poderíamos criar um novo array especificando tamanho e capacidade\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// make é uma função 'fábrica' para os tipos básicos\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// int[] é o tipo, 3 o tamanho, 8 a capacidade\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> intSlice2 []\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> make\u003C/span>\u003Cspan style=\"color:#E1E4E8\">([]\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// podemos inserir os dados no FIM de outro array via função append com o operador spread (...)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">intSlice2[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 10\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">intSlice2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> append\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intSlice, intSlice2\u003C/span>\u003Cspan style=\"color:#F97583\">...\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#6A737D\">// [10, 0, 0, 1, 2, 3, 7]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intSlice2)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// iterando...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> index, value \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> intSlice2 {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Index: \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> index \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \" Value: \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"maps\">MAPS\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// podemos criar um mapa desta forma\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myMap \u003C/span>\u003Cspan style=\"color:#F97583\">map\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> make\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">map\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myMap)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ou diretamente atribuindo valores\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">MyMap2 \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> map\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}{\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"James\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Tiberius\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\">8\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Kirk\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myMap2[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"James\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 7\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// nesse caso, ele retorna o valor padrão do tipo, nesse caso do uint8 é 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myMap2[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Spock\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// podemos deletar um valor usando a função delete\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">delete\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myMap2, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Tiberius\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// para saber se o valor estava no mapa ou ele era realmente 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// temos um segundo no mapa\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> nameLen, found \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myMap2[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Spock\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#6A737D\">// 0 &#x26; false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">if\u003C/span>\u003Cspan style=\"color:#E1E4E8\">  found {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"The name length is \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> nameLen)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// iterando...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> key, value \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myMap2 {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Name: \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> key \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \" Name length: \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Chr>\n\u003Ch2 id=\"structs--interfaces\">Structs &#x26; Interfaces\u003C/h2>\n\u003Cp>Structs em go nada mais são do que objeto, que por sua vez, podem conter métodos.\r\nMas go é orientado a objetos? Não necessariamente, em go não existe herança por exemplo.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// structs podem ser declaradas de forma anonima\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// porém assim não podem ser reutilizadas\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> person \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> struct\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  name \u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  age \u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}{\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Spock\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">83\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// desta forma podemos reutilizar esta interface\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> person\u003C/span>\u003Cspan style=\"color:#F97583\"> struct\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  name \u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  age \u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Interfaces por sua vez tem um comportamento mais ‘passivo’.\u003C/p>\n\u003Cp>Ao definir as funções de uma interface, toda struct que conter estas funções será considerada compatível com a interface. Desta forma não precisaremos explicitamente atribuir a interface para aquela struct, desta forma podemos trabalhar melhor com bibliotecas externas definindo interfaces que sejam compatíveis com structs já existentes nestas bibliotecas.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> owner\u003C/span>\u003Cspan style=\"color:#F97583\"> struct\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  name \u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> gasCar\u003C/span>\u003Cspan style=\"color:#F97583\"> struct\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  kml     \u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  tankCap \u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  owner\u003C/span>\u003Cspan style=\"color:#6A737D\">   // caso tipo e variável tenham o mesmo nome, podemos omitir\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// desta forma atribuímos uma função para a struct gasEngine\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">e \u003C/span>\u003Cspan style=\"color:#B392F0\">gasCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#B392F0\">kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#F97583\"> uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(e.tankCap) \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#F97583\"> uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(e.kml)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> electricCar\u003C/span>\u003Cspan style=\"color:#F97583\"> struct\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  kpkwh      \u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  batteryCap \u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  owner      \u003C/span>\u003Cspan style=\"color:#B392F0\">owner\u003C/span>\u003Cspan style=\"color:#6A737D\"> // podemos por ambos sem problemas também\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// desta forma atribuímos uma função para a struct gasEngine\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">e \u003C/span>\u003Cspan style=\"color:#B392F0\">electricCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#B392F0\">kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#F97583\"> uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(e.batteryCap) \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#F97583\"> uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(e.kpkwh)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ao declarar a interface, tanto o carro a gasolina quanto o elétrico\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// poderão satisfazer este requisito e serem considerados somente carros\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> car\u003C/span>\u003Cspan style=\"color:#F97583\"> interface\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">uint\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> willReachDestination\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">c\u003C/span>\u003Cspan style=\"color:#B392F0\"> car\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">distance\u003C/span>\u003Cspan style=\"color:#F97583\"> uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">bool\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> c.\u003C/span>\u003Cspan style=\"color:#B392F0\">kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> distance\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // uma struct pode ser inicializada desta forma\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myCar \u003C/span>\u003Cspan style=\"color:#B392F0\">gasCar\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> gasCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{kml: \u003C/span>\u003Cspan style=\"color:#79B8FF\">15\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, tankCap: \u003C/span>\u003Cspan style=\"color:#79B8FF\">40\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, owner: \u003C/span>\u003Cspan style=\"color:#B392F0\">owner\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Someone\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // e ser alterada desta forma (pegando estrada né)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  myCar.kml \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 20\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myCar.\u003C/span>\u003Cspan style=\"color:#B392F0\">kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // nomes de variáveis podem ser omitidos, enviando os parâmetros em ordem\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myOtherCar \u003C/span>\u003Cspan style=\"color:#B392F0\">electricCar\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> electricCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#B392F0\">owner\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Someone\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myOtherCar.\u003C/span>\u003Cspan style=\"color:#B392F0\">kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // ao usar a função podemos utilizar ambos os carros\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // pois ambos satisfazem os requisitos da interface\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> distance \u003C/span>\u003Cspan style=\"color:#F97583\">uint\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 500\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Gas Car: \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#B392F0\">willReachDestination\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myCar, distance))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Electric car: \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#B392F0\">willReachDestination\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myOtherCar, distance))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Chr>\n\u003Ch2 id=\"pointers\">Pointers\u003C/h2>\n\u003Cp>Ponteiros são um tipo especial de dados que armazena (ou ‘aponta’) um endereço de memória.\r\nPonteiros são identificados por um \u003Ccode>*\u003C/code> na declaração da variável.\u003C/p>\n\u003Cp>Veja também: \u003Ca href=\"/shards/pointers\">Ponteiros\u003C/a>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> x \u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 10\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ao inicializar um ponteiro desta forma, estamos criando um novo valor na memória\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// neste caso 0 (default do int32) e armazenando uma referencia para ele em 'a'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> a \u003C/span>\u003Cspan style=\"color:#F97583\">*int32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> new\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// com o '*' antes do ponteiro, estamos de-referenciando\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// indo até o espaço de memória que é apontado\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'a' point to the value: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">a)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'x' value is: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, x)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// caso queira atualizar o valor de 'a' use '*'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// caso contrário, estará atualizando o endereço de memória\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">a \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> y \u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 70\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// '&#x26;' é usado para capturar o endereço de memória de uma variável\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// neste caso, estamos referenciando a variável 'y'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> b \u003C/span>\u003Cspan style=\"color:#F97583\">*int32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">y\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'b' point to the value: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'y' value is: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, y)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// agora como 'b' e 'y' apontam para o mesmo local na memória\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// qualquer mudança em no valor de um deles, causa um efeito no outro\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 80\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"updating by reference...\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'b' point to the value: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'y' value is: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, y)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">//e se nao fosse um ponteiro?\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">c \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">d \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> c\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'c' value is: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, c)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'d' value is: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, d)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">d \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"updating by value...\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'c' value is: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, c)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'d' value is: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, d)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Variável\u003C/th>\u003Cth>Valor\u003C/th>\u003Cth>Endereço\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>a\u003C/td>\u003Ctd>\u003Cem>0x1b05\u003C/em>\u003C/td>\u003Ctd>0x1b00\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>b\u003C/td>\u003Ctd>\u003Cem>0x1b04\u003C/em>\u003C/td>\u003Ctd>0x1b01\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003C/td>\u003Ctd>\u003C/td>\u003Ctd>0x1b03\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>x\u003C/td>\u003Ctd>10\u003C/td>\u003Ctd>0x1b02\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>y\u003C/td>\u003Ctd>70 -> 80\u003C/td>\u003Ctd>\u003Cem>0x1b04\u003C/em>\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003C/td>\u003Ctd>0  ->  5\u003C/td>\u003Ctd>\u003Cem>0x1b05\u003C/em>\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Cp>Porém… nem tudo é tão ‘simples’ assim, no caso de estruturas de dados complexas como \u003Cem>slices\u003C/em> qualquer cópia será por referência dado que  um \u003Cem>slice\u003C/em> nada mais é que um conjunto de ponteiros para um \u003Cem>array\u003C/em>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> slice \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> sliceCopy \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> slice\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ao atualizar um, atualizamos o outro\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">sliceCopy[\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(slice)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(sliceCopy)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Voltando no ponto sobre atualizar por referência ou por valor, todo parâmetro de função será implicitamente passado por valor, ou seja, ao passarmos um \u003Cem>array\u003C/em> por parâmetro, a função criará uma cópia do \u003Cem>array\u003C/em> original, desta forma DUPLICANDO a memória, o que pode fazer sentido para alguns casos de uso, mas não para todos.\u003C/p>\n\u003Cp>Sendo assim podemos enviar um ponteiro, quando quisermos evitar este tipo de cenário porém tendo em mente que o array possivelmente será modificado, causando efeitos colaterais, desejados ou não.\u003C/p>\n\u003Cp>Neste exemplo temos duas funções que calculam o valor quadrado, uma recebendo um array/slice por parâmetro e outra um ponteiro para este array/slice.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> square\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">thing2\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) [\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Memory location of thing2: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%p\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">thing2)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> thing2 {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  thing2[i] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> thing2[i] \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> thing2[i]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> thing2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> squareRef\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">thing3\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) [\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // aqui nao precisa do '&#x26;' esta variável já é um ponteiro\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // usando '&#x26;' o resultado será o endereço do ponteiro (ponteiro do ponteiro)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Memory location of thing3: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%p\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, thing3)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> thing3 {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  thing3[i] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> thing3[i] \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> thing3[i]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> return\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#E1E4E8\">thing3\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Ao executarmos ambas as funções podemos ver na prática esta diferença na memória\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> thing1 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Memory location of thing1: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%p\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">thing1)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> resultSquare [\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> square\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(thing1)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Result value: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, resultSquare)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"thing1 value: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, thing1)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> resultSquareRef [\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">int32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> squareRef\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">thing1)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Result ref value: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, resultSquareRef)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"thing1 new value: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, thing1)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\\\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Memory location of thing1: \u003C/span>\u003Cspan style=\"color:#F97583\">0x\u003C/span>\u003Cspan style=\"color:#79B8FF\">c0000200c0\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Memory location of thing2: \u003C/span>\u003Cspan style=\"color:#F97583\">0x\u003C/span>\u003Cspan style=\"color:#79B8FF\">c0000200d8\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Result value: [\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 9\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 16\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 25\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">thing1 value: [\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Memory location of thing3: \u003C/span>\u003Cspan style=\"color:#F97583\">0x\u003C/span>\u003Cspan style=\"color:#79B8FF\">c0000200c0\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Result ref value: [\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 9\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 16\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 25\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">thing1 new value: [\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 9\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 16\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 25\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">\\\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Chr>\n\u003Ch2 id=\"goroutines\">Goroutines\u003C/h2>\n\u003Cp>Primeira coisa a ser comentada sobre Goroutines é, Goroutine é uma ferramenta de concorrência e não paralelismo. Caso este assunto cause alguma confusão ainda na sua cabeça, tente \u003Ca href=\"/shards/concurrency-is-not-parallelism\">dar uma olhada aqui antes\u003C/a>.\u003C/p>\n\u003Cp>Alguns pontos sobre Goroutines\u003C/p>\n\u003Cul>\n\u003Cli>Não são threads, são bem mais leves\u003C/li>\n\u003Cli>São gerenciadas pelo scheduler interno do go e não pelo Sistema operacional\u003C/li>\n\u003Cli>É um modelo concorrente, podendo também ser paralelo (mas não necessariamente)\u003C/li>\n\u003C/ul>\n\u003Cp>Goroutines são disparadas/agendadas em background através da palavra chave \u003Cem>go\u003C/em> antes da chamada,\r\nno exemplo abaixo utilizamos o \u003Cem>go\u003C/em> antes da chamada à função \u003Cem>dbCall(i)\u003C/em>, desta forma a execução da função vai acontecer de forma concorrente.\u003C/p>\n\u003Cp>Porém ao analisar o código você também notará algo a mais de novo: O \u003Cem>WaitGroup\u003C/em>, nada mais é do que uma ferramenta de sincronização de Goroutines. Adicionamos ao contador do WaitGroup o número de Goroutines que estamos esperando ser concluídas, e chamamos o \u003Cem>Done()\u003C/em> para decrementar este valor que deve resultar em zero (se não der zero, teremos problemas), Assim garantimos que o programa irá aguardar que todas as Goroutines agendadas terminem\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> wg \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> sync\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">WaitGroup\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> dbData \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[1]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[2]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[3]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[4]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[5]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> t0 \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Now\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; i \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\"> len\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(dbData); i\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // adiciona 1 ao contador\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  wg.\u003C/span>\u003Cspan style=\"color:#B392F0\">Add\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  go\u003C/span>\u003Cspan style=\"color:#B392F0\"> dbCall\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(i)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> wg.\u003C/span>\u003Cspan style=\"color:#B392F0\">Wait\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Total execution time: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Since\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(t0))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// simulando delay da chamada ao banco\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> dbCall\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">i\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> delay \u003C/span>\u003Cspan style=\"color:#F97583\">float32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> rand.\u003C/span>\u003Cspan style=\"color:#B392F0\">Float32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2000\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Sleep\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Duration\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(delay) \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> time.Millisecond)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Result from DB:\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, dbData[i])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // remove 1 do contador\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> wg.\u003C/span>\u003Cspan style=\"color:#B392F0\">Done\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Ok, legal!\u003C/p>\n\u003Cp>Mas se eu precisar armazenar esse resultado em algum lugar? Preciso saber a ordem com que os processos terminaram de executar, Como lidar com a condição de corrida?\u003C/p>\n\u003Cp>Go assim como grande parte das linguagens de programação, implementa tanto o \u003Cem>Mutex\u003C/em> quanto o \u003Cem>Semaphore\u003C/em> para estes casos.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> m \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> sync\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">Mutex\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> wg \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> sync\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">WaitGroup\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> dbData \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[1]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[2]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[3]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[4]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[5]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> results \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> t0 \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Now\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; i \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\"> len\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(dbData); i\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // adiciona 1 ao contador\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  wg.\u003C/span>\u003Cspan style=\"color:#B392F0\">Add\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  go\u003C/span>\u003Cspan style=\"color:#B392F0\"> dbCall\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(i)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> wg.\u003C/span>\u003Cspan style=\"color:#B392F0\">Wait\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Total execution time: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Since\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(t0))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"The results are: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, results)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// simulando delay da chamada ao banco\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> dbCall\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">i\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // fixando o tempo para forçar cenários concorrentes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> delay \u003C/span>\u003Cspan style=\"color:#F97583\">float32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2000\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Sleep\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Duration\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(delay) \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> time.Millisecond)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Result from DB:\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, dbData[i])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\"> save\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(dbData[i])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // remove 1 do contador\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> wg.\u003C/span>\u003Cspan style=\"color:#B392F0\">Done\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> save\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">result\u003C/span>\u003Cspan style=\"color:#F97583\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // bloqueando a escrita para evitar condição de corrida\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> m.\u003C/span>\u003Cspan style=\"color:#B392F0\">Lock\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> results \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> append\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(results, result)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // liberando o acesso para outras Goroutines\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> m.\u003C/span>\u003Cspan style=\"color:#B392F0\">Unlock\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Agora sim, funcionando bem, mas… e se eu quiser ir logando conforme os valores são inseridos?\u003C/p>\n\u003Cp>O \u003Cem>Mutex\u003C/em> em go tem uma funcionalidade a mais, utilizando um \u003Cem>RWMutex\u003C/em> mutex de leitura e escrita, podemos especificar se nosso lock será somente de leitura ou não\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> m \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> sync\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">RWMutex\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> wg \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> sync\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">WaitGroup\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> dbData \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[1]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[2]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[3]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[4]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ID[5]\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> results \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> t0 \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Now\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; i \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\"> len\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(dbData); i\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // adiciona 1 ao contador\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  wg.\u003C/span>\u003Cspan style=\"color:#B392F0\">Add\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  go\u003C/span>\u003Cspan style=\"color:#B392F0\"> dbCall\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(i)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> wg.\u003C/span>\u003Cspan style=\"color:#B392F0\">Wait\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Total execution time: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Since\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(t0))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// simulate DB call delay\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> dbCall\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">i\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // fixando o tempo para forçar cenários concorrentes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> delay \u003C/span>\u003Cspan style=\"color:#F97583\">float32\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2000\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Sleep\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(time.\u003C/span>\u003Cspan style=\"color:#B392F0\">Duration\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(delay) \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> time.Millisecond)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\"> save\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(dbData[i])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\"> log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // remove 1 do contador\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> wg.\u003C/span>\u003Cspan style=\"color:#B392F0\">Done\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> save\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">result\u003C/span>\u003Cspan style=\"color:#F97583\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // bloqueando a escrita para evitar condição de corrida\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> m.\u003C/span>\u003Cspan style=\"color:#B392F0\">Lock\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> results \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> append\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(results, result)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // liberando o acesso para outras Goroutines\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> m.\u003C/span>\u003Cspan style=\"color:#B392F0\">Unlock\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // bloqueia somente a leitura\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> m.\u003C/span>\u003Cspan style=\"color:#B392F0\">RLock\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Printf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Current results: \u003C/span>\u003Cspan style=\"color:#79B8FF\">%v\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, results)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // desbloqueia a leitura\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> m.\u003C/span>\u003Cspan style=\"color:#B392F0\">RUnlock\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Bom, isso é o básico para mexer com Goroutines, para fazer mais que isso precisamos dar uma olhada em \u003Cem>Channels\u003C/em>\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"channels\">Channels\u003C/h2>\n\u003Cp>O que é isso? São canais de comunicação, desenhados para trabalhar com Goroutines.\u003C/p>\n\u003Cp>O que isso faz?\u003C/p>\n\u003Cul>\n\u003Cli>Escuta/espera por dados\u003C/li>\n\u003Cli>Armazena dados\u003C/li>\n\u003Cli>Formato FIFO (fila)\u003C/li>\n\u003Cli>Thread safe\u003C/li>\n\u003C/ul>\n\u003Cp>Vamos ver como declarar e utilizar os channels\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Declarando um channel de tamanho 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ch1 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> make\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// adicionando o valor 1 no channel ch1=[1]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Exatamente aqui, teremos um lock\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ch1 \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// removendo o primeiro valor do channel e armazenando na variável\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x3C;-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">ch1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// criando um channel com um valor inicial pré determinado\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ch2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> make\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ch2 \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ERRO\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Valor processado:\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">ch2)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Como channels foram desenhadas para trabalhar junto com Goroutines, no momento em que um valor é inserido no canal, o processo irá parar, resultando em um DeadLock, para corrigir isto, teremos que fazer da seguinte forma:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> c \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> make\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> go\u003C/span>\u003Cspan style=\"color:#B392F0\"> process\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(c)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Valor processado:\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">c)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> process\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">c\u003C/span>\u003Cspan style=\"color:#F97583\"> chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> c \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>OK, mas… e se eu não souber quantos valores vão estar no meu channel e quiser ficar escutando ele até que ele termine?\u003C/p>\n\u003Cp>Podemos utilizar os channels dentro de \u003Cem>for-range\u003C/em>, porém caso o channel não for fechado corretamente, teremos novamente um Deadlock, então não esqueça de usar o \u003Cem>close\u003C/em> no channel\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // Inicializando o chan com 5 irá liberar espaço para a execução toda neste caso\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // teste removendo o 5 e veja o que muda\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> c \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> make\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> go\u003C/span>\u003Cspan style=\"color:#B392F0\"> process\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(c)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> c {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Valor processado:\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, i)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Fim do processamento\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> process\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">c\u003C/span>\u003Cspan style=\"color:#F97583\"> chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // defer??? é uma palavra reservada\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // uma expressão que será executada no momento antes da função terminar\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> defer\u003C/span>\u003Cspan style=\"color:#B392F0\"> close\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(c)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; i \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; i\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  c \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Outra ferramenta útil é o \u003Cem>select\u003C/em>, que funciona como um \u003Cem>switch\u003C/em> para channels\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> oddChan \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#B392F0\"> make\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> pairChan \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#B392F0\"> make\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> numbers \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">6\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">9\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numbers {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  go\u003C/span>\u003Cspan style=\"color:#B392F0\"> processNumber\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(numbers[i], oddChan, pairChan)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> for\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numbers {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  results\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(oddChan, pairChan)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> results\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">oddChan\u003C/span>\u003Cspan style=\"color:#F97583\"> chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">pairChan\u003C/span>\u003Cspan style=\"color:#F97583\"> chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> select\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> case\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x3C;-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">oddChan:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Valor ímpar encontrado:\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, value)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> case\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x3C;-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">pairChan:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Valor Par encontrado:\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, value)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> processNumber\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">number\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">oddChan\u003C/span>\u003Cspan style=\"color:#F97583\"> chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">pairChan\u003C/span>\u003Cspan style=\"color:#F97583\"> chan\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> number\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#F97583\"> >\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  oddChan \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> number\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> } \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  pairChan \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> number\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Chr>\n\u003Ch2 id=\"generics\">Generics\u003C/h2>\n\u003Cp>Tipos genéricos demoraram um pouco para entrar na linguagem devido o uso de interfaces em go, porém o uso de tipos genéricos dão muito mais flexibilidade para o código\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> intSlice \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">6\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">9\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> intSum \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#B392F0\"> processNumbers\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(intSlice)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Sum of Integers:\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, intSum)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> floatSlice \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#F97583\">float32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#79B8FF\">1.2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3.1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">6.4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">8.3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">9.2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">10.8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> floatSum \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#B392F0\"> processNumbers\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(floatSlice)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Sum of Floats:\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, floatSum)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Aqui definimos que o tipo T pode ser [int | float32 | float64]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// podemos utilizar o any também assim como outras linguagens como Typescript\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// outro detalhe any nada mais é do que um alias para uma interface vazia :P\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> processNumbers\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#FFAB70\">T\u003C/span>\u003Cspan style=\"color:#F97583\"> int\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#F97583\"> float32\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#F97583\"> float64\u003C/span>\u003Cspan style=\"color:#E1E4E8\">](\u003C/span>\u003Cspan style=\"color:#FFAB70\">slice\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003Cspan style=\"color:#B392F0\">T\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#B392F0\">T\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  sum\u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _, v \u003C/span>\u003Cspan style=\"color:#F97583\">:=\u003C/span>\u003Cspan style=\"color:#F97583\"> range\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> slice {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  sum \u003C/span>\u003Cspan style=\"color:#F97583\">+=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> v\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> sum\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Lembra do exemplo de interfaces com structs? vamos adapta-lo para utilizar tipos genéricos, porém fica um pouco mais complicado.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"go\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> electricCar\u003C/span>\u003Cspan style=\"color:#F97583\"> struct\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> kpkwh      \u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> batteryCap \u003C/span>\u003Cspan style=\"color:#F97583\">uint8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">e \u003C/span>\u003Cspan style=\"color:#B392F0\">electricCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#B392F0\">kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> return\u003C/span>\u003Cspan style=\"color:#F97583\"> uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(e.batteryCap) \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#F97583\"> uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(e.kpkwh)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> car\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#FFAB70\">T\u003C/span>\u003Cspan style=\"color:#B392F0\"> gasCar\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> electricCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">struct\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\"> owner\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> engine \u003C/span>\u003Cspan style=\"color:#B392F0\">T\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> engine\u003C/span>\u003Cspan style=\"color:#F97583\"> interface\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\"> kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">uint\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> willReachDestination\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">e\u003C/span>\u003Cspan style=\"color:#B392F0\"> engine\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">distance\u003C/span>\u003Cspan style=\"color:#F97583\"> uint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">bool\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> e.\u003C/span>\u003Cspan style=\"color:#B392F0\">kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> distance\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">func\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // uma struct pode ser inicializada desta forma\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myCar \u003C/span>\u003Cspan style=\"color:#B392F0\">car\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#B392F0\">gasCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> car\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#B392F0\">gasCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]{owner: \u003C/span>\u003Cspan style=\"color:#B392F0\">owner\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Someone\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}, engine: \u003C/span>\u003Cspan style=\"color:#B392F0\">gasCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{kml: \u003C/span>\u003Cspan style=\"color:#79B8FF\">15\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, tankCap: \u003C/span>\u003Cspan style=\"color:#79B8FF\">40\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // e ser alterada desta forma\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> myCar.engine.kml \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 20\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myCar.engine.\u003C/span>\u003Cspan style=\"color:#B392F0\">kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // nomes de variáveis podem ser omitidos, enviando os parâmetros em ordem\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myOtherCar \u003C/span>\u003Cspan style=\"color:#B392F0\">car\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#B392F0\">electricCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> car\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#B392F0\">electricCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]{\u003C/span>\u003Cspan style=\"color:#B392F0\">owner\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Someone\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}, \u003C/span>\u003Cspan style=\"color:#B392F0\">electricCar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myOtherCar.engine.\u003C/span>\u003Cspan style=\"color:#B392F0\">kmLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // ao usar a função podemos utilizar ambos os carros\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"> // pois ambos satisfazem os requisitos da interface\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> distance \u003C/span>\u003Cspan style=\"color:#F97583\">uint\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 500\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Gas Car: \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#B392F0\">willReachDestination\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myCar.engine, distance))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"> fmt.\u003C/span>\u003Cspan style=\"color:#B392F0\">Println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Electric car: \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#B392F0\">willReachDestination\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(myOtherCar.engine, distance))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cbr>\n\u003Cp>Fim✨, do básico até o não tão básico, cobrindo grande parte das estruturas da linguagem. Espero ter ajudado pelo menos um pouco no entendimento de como utilizar Golang\u003C/p>",{"headings":207,"localImagePaths":283,"remoteImagePaths":284,"frontmatter":285,"imagePaths":288},[208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268,271,274,277,280],{"depth":49,"slug":209,"text":210},"o-que-veremos-aqui","o que veremos aqui",{"depth":49,"slug":212,"text":213},"características-básicas","Características básicas",{"depth":68,"slug":215,"text":216},"padrões-de-uso","Padrões de uso",{"depth":49,"slug":218,"text":219},"módulos--pacotes","Módulos & Pacotes",{"depth":68,"slug":221,"text":222},"entrypoint","Entrypoint",{"depth":49,"slug":224,"text":225},"tipos-de-dados","Tipos de dados",{"depth":68,"slug":227,"text":228},"declarando-valores","Declarando Valores",{"depth":68,"slug":230,"text":231},"tipos-básicos","Tipos básicos",{"depth":68,"slug":233,"text":234},"strings-runes--bytes","STRINGS, RUNES & BYTES",{"depth":68,"slug":236,"text":237},"operações-matemáticas-básicas","Operações matemáticas básicas",{"depth":49,"slug":239,"text":240},"estruturas-de-controle","Estruturas de controle",{"depth":68,"slug":242,"text":243},"if","IF",{"depth":68,"slug":245,"text":246},"switch-case","Switch-case",{"depth":68,"slug":248,"text":249},"for","For",{"depth":49,"slug":251,"text":252},"funções","Funções",{"depth":68,"slug":254,"text":255},"métodos","Métodos",{"depth":49,"slug":257,"text":258},"estruturas-de-dados","Estruturas de dados",{"depth":68,"slug":260,"text":261},"arrays","ARRAYS",{"depth":68,"slug":263,"text":264},"slices","SLICES",{"depth":68,"slug":266,"text":267},"maps","MAPS",{"depth":49,"slug":269,"text":270},"structs--interfaces","Structs & Interfaces",{"depth":49,"slug":272,"text":273},"pointers","Pointers",{"depth":49,"slug":275,"text":276},"goroutines","Goroutines",{"depth":49,"slug":278,"text":279},"channels","Channels",{"depth":49,"slug":281,"text":282},"generics","Generics",[],[],{"title":196,"pubDate":286,"hero":198,"tags":287},"2024-09-16",[128,200],[],"docker-how-to-use",{"id":289,"data":291,"body":296,"filePath":297,"digest":298,"rendered":299},{"title":292,"pubDate":293,"hero":294,"tags":295},"Docker - Como utilizar",["Date","2025-01-05T00:00:00.000Z"],"/images/docker.webp",[18,119,152],"## Comandos Docker\r\n\r\nEstado do processo docker (process status - ps)\r\nlista de todos os containers rodando no docker\r\n\r\n``` sh\r\ndocker ps\r\n```\r\n\r\n### Parametros úteis\r\n\r\n| Parametro | Função                                                                       |\r\n| --------- | ---------------------------------------------------------------------------- |\r\n| -a        | incluir containers que não estão mais rodando                                |\r\n| -q        | só o id do container, útil para usar de dado de entrada para outros comandos |\r\n\r\n### Rodando coisas no Docker\r\n\r\nComeçando do básico\r\n\r\n``` sh\r\ndocker run hello-world\r\n```\r\n\r\n### parâmetros úteis\r\n\r\n| Parametro | Função                                                |\r\n| --------- | ----------------------------------------------------- |\r\n| -d        | destravar o terminal e roda o container em background |\r\n| -e        | passar variáveis de ambiente                          |\r\n| -i        | modo interativo, mantém o stdin                       |\r\n| -p        | mapeamento de portas docker -> máquina local          |\r\n| -t        | alocar um tty para acessar o container                |\r\n| -v        | vincular volumes ao container                         |\r\n| -rm       | remove o container assim que ele cair                 |\r\n| --name    | define um nome para o container                       |\r\n\r\nEntrando em um container\r\nobs.:  \"-it\"  ==  \"-i -t\"\r\n\r\n``` sh\r\ndocker run -it ubuntu bash\r\n```\r\n\r\nAcessando localmente algo que está no docker\r\npelo parâmetro -p mapeamos a porta 80 de dentro do docker para a porta 8080 da maquina local\r\n\r\n``` sh\r\ndocker run -p 8080:80 nginx\r\n```\r\n\r\nassim podemos acessar o nginx [localmente através da porta 8080](http://localhost:8080)\r\n\r\nos containers tambem podem ser nomeados para serem removidos pelo nome dado a eles e nao pelo nome gerado\r\n\r\n``` sh\r\ndocker run -d -p 8080:80 --name server nginx\r\n```\r\n\r\nagora o nginx esta rodando e o container se chama *server* e pode ser referenciado desta forma.\r\npara acessar um container já em execução, utilizamos o exec\r\n\r\n``` sh\r\ndocker exec -it server bash\r\n```\r\n\r\n### Bind mounts\r\n\r\nmapeamento de pastas para dentro de um container através de *volumes*\r\nPrimeiro criando um arquivo na máquina local\r\n\r\n```` html\r\n# ~/Projects/files/index.html\r\n\u003Chtml>\r\n\u003Ch1>Custom Server Title\u003C/h1>\r\n\u003Cbr>\r\n\u003Ch2>Welcome to the server!!\u003Ch2>\r\n\u003C/html>\r\n````\r\n\r\ndepois mapeando este volume arquivo para um diretorio dentro do container\r\nObs.: a estrutura do container muda de acordo com a imagem usada, caso nao saiba a estrutura do container em utilização, pesquise ou entre nele via bash para ver\r\n\r\n``` sh\r\ndocker run -d -p 8080:80 -v ~/Projects/files/:/usr/share/nginx/html --name server nginx\r\n```\r\n\r\ntip: usar guia anonima para nao ter problemas com cache\r\ntip(2): da pra usar \"$(pwd)\" no path do comando para referenciar o diretório atual\r\n\r\nA forma mais elegante e atual de executar essa mesma ação\r\n\r\n``` sh\r\ndocker run -d -p 8080:80 --mount type=bind,source=~/Projects/files/,target=/usr/share/nginx/html --name server nginx\r\n```\r\n\r\ndiferenças: --mount é mais explicito o bind, se o source for incorreto, o -v cria o diretório novo, o --mount da erro\r\n\r\n### Como criar volumes\r\n\r\n``` sh\r\ndocker create volume meuVolume\r\n```\r\n\r\nagora para ver os detalhes do volume\r\n\r\n``` sh\r\ndocker volume inspect meuVolume  \r\n```\r\n\r\nresultado:\r\n\r\n``` json\r\n[\r\n  {\r\n      \"CreatedAt\": \"2023-09-28T16:40:47-03:00\",\r\n      \"Driver\": \"local\",\r\n      \"Labels\": null,\r\n      \"Mountpoint\": \"/var/lib/docker/volumes/meuVolume/_data\",\r\n      \"Name\": \"meuVolume\",\r\n      \"Options\": null,\r\n      \"Scope\": \"local\"\r\n  }\r\n]\r\n```\r\n\r\nagora da pra usar o volume criado igual qualquer outro e estes arquivos vao ser compartilhados pelos containers que utilizarem estes volumes\r\n\r\n``` sh\r\ndocker run -d -p 8080:80 --mount source=meuVolume,target=/app --name server nginx\r\n```\r\n\r\nou\r\n\r\n``` sh\r\ndocker run -d -p 8080:80 -v meuVolume:/app --name server nginx\r\n```\r\n\r\nporem criando vários volumes, ao longo do tempo vamos tomando muito espaço em disco, para limpar os volumes do docker, use:\r\n\r\n``` sh\r\ndocker volume prune\r\n```\r\n\r\n## Dockerfile\r\n\r\npodemos criar arquivos docker para criar uma imagem personalizada de acordo com a nossa necessidade\r\n\r\n``` yaml\r\n# imagem base usada para a criação da nova imagem\r\nFROM nginx:latest\r\n\r\n# comandos a serem executados na criação da imagem\r\nRUN apt update\r\nRUN apt install -y vim\r\n```\r\n\r\npara executarmos este docker file, abrimos o terminal na pasta onde o arquivo se encontra e executamos o comando:\r\n\r\n``` sh\r\ndocker build -t nginx-vim:latest .\r\n```\r\n\r\no parâmetro '-t' define a tag da imagem, assim como usamos antes o nginx antes, agora temos uma versão do 'nginx' com o vim instalado chamada de 'nginx-vim'\r\n\r\njá o '.' no final se refere a localização do arquivo Dockerfile, como estamos com o terminal aberto no mesmo diretório do arquivo Dockerfile, usamos o ponto, caso nao seja o caso, devemos usar o caminho relativo do arquivo\r\n\r\n...\r\n\r\n### #todo\r\n\r\n* ver diferenças de docker [kill | stop | rm];","src/content/notes/docker-how-to-use.md","83c07698db19e4db",{"html":300,"metadata":301},"\u003Ch2 id=\"comandos-docker\">Comandos Docker\u003C/h2>\n\u003Cp>Estado do processo docker (process status - ps)\r\nlista de todos os containers rodando no docker\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ps\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"parametros-úteis\">Parametros úteis\u003C/h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Parametro\u003C/th>\u003Cth>Função\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>-a\u003C/td>\u003Ctd>incluir containers que não estão mais rodando\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>-q\u003C/td>\u003Ctd>só o id do container, útil para usar de dado de entrada para outros comandos\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch3 id=\"rodando-coisas-no-docker\">Rodando coisas no Docker\u003C/h3>\n\u003Cp>Começando do básico\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> hello-world\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"parâmetros-úteis\">parâmetros úteis\u003C/h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Parametro\u003C/th>\u003Cth>Função\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>-d\u003C/td>\u003Ctd>destravar o terminal e roda o container em background\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>-e\u003C/td>\u003Ctd>passar variáveis de ambiente\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>-i\u003C/td>\u003Ctd>modo interativo, mantém o stdin\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>-p\u003C/td>\u003Ctd>mapeamento de portas docker -> máquina local\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>-t\u003C/td>\u003Ctd>alocar um tty para acessar o container\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>-v\u003C/td>\u003Ctd>vincular volumes ao container\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>-rm\u003C/td>\u003Ctd>remove o container assim que ele cair\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>—name\u003C/td>\u003Ctd>define um nome para o container\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Cp>Entrando em um container\r\nobs.:  “-it”  ==  “-i -t”\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -it\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ubuntu\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> bash\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Acessando localmente algo que está no docker\r\npelo parâmetro -p mapeamos a porta 80 de dentro do docker para a porta 8080 da maquina local\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -p\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 8080:80\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> nginx\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>assim podemos acessar o nginx \u003Ca href=\"http://localhost:8080\">localmente através da porta 8080\u003C/a>\u003C/p>\n\u003Cp>os containers tambem podem ser nomeados para serem removidos pelo nome dado a eles e nao pelo nome gerado\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -d\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -p\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 8080:80\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> server\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> nginx\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>agora o nginx esta rodando e o container se chama \u003Cem>server\u003C/em> e pode ser referenciado desta forma.\r\npara acessar um container já em execução, utilizamos o exec\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> exec\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -it\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> server\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> bash\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"bind-mounts\">Bind mounts\u003C/h3>\n\u003Cp>mapeamento de pastas para dentro de um container através de \u003Cem>volumes\u003C/em>\r\nPrimeiro criando um arquivo na máquina local\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\"># ~/Projects/files/index.html\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">html\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Custom Server Title&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">br\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Welcome to the server!!&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">html\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>depois mapeando este volume arquivo para um diretorio dentro do container\r\nObs.: a estrutura do container muda de acordo com a imagem usada, caso nao saiba a estrutura do container em utilização, pesquise ou entre nele via bash para ver\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -d\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -p\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 8080:80\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -v\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/Projects/files/:/usr/share/nginx/html\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> server\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> nginx\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>tip: usar guia anonima para nao ter problemas com cache\r\ntip(2): da pra usar ”$(pwd)” no path do comando para referenciar o diretório atual\u003C/p>\n\u003Cp>A forma mais elegante e atual de executar essa mesma ação\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -d\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -p\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 8080:80\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --mount\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> type=bind,source=~/Projects/files/,target=/usr/share/nginx/html\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> server\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> nginx\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>diferenças: —mount é mais explicito o bind, se o source for incorreto, o -v cria o diretório novo, o —mount da erro\u003C/p>\n\u003Ch3 id=\"como-criar-volumes\">Como criar volumes\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> create\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> volume\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> meuVolume\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>agora para ver os detalhes do volume\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> volume\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> inspect\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> meuVolume\u003C/span>\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>resultado:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      \"CreatedAt\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"2023-09-28T16:40:47-03:00\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      \"Driver\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"local\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      \"Labels\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      \"Mountpoint\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/var/lib/docker/volumes/meuVolume/_data\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      \"Name\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"meuVolume\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      \"Options\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      \"Scope\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"local\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>agora da pra usar o volume criado igual qualquer outro e estes arquivos vao ser compartilhados pelos containers que utilizarem estes volumes\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -d\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -p\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 8080:80\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --mount\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> source=meuVolume,target=/app\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> server\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> nginx\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>ou\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -d\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -p\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 8080:80\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -v\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> meuVolume:/app\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> server\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> nginx\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>porem criando vários volumes, ao longo do tempo vamos tomando muito espaço em disco, para limpar os volumes do docker, use:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> volume\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> prune\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"dockerfile\">Dockerfile\u003C/h2>\n\u003Cp>podemos criar arquivos docker para criar uma imagem personalizada de acordo com a nossa necessidade\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"yaml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># imagem base usada para a criação da nova imagem\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">FROM nginx:latest\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># comandos a serem executados na criação da imagem\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">RUN apt update\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">RUN apt install -y vim\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>para executarmos este docker file, abrimos o terminal na pasta onde o arquivo se encontra e executamos o comando:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sh\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> build\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -t\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> nginx-vim:latest\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> .\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>o parâmetro ‘-t’ define a tag da imagem, assim como usamos antes o nginx antes, agora temos uma versão do ‘nginx’ com o vim instalado chamada de ‘nginx-vim’\u003C/p>\n\u003Cp>já o ’.’ no final se refere a localização do arquivo Dockerfile, como estamos com o terminal aberto no mesmo diretório do arquivo Dockerfile, usamos o ponto, caso nao seja o caso, devemos usar o caminho relativo do arquivo\u003C/p>\n\u003Cp>…\u003C/p>\n\u003Ch3 id=\"todo\">#todo\u003C/h3>\n\u003Cul>\n\u003Cli>ver diferenças de docker [kill | stop | rm];\u003C/li>\n\u003C/ul>",{"headings":302,"localImagePaths":325,"remoteImagePaths":326,"frontmatter":327,"imagePaths":329},[303,306,309,312,315,318,321,322],{"depth":49,"slug":304,"text":305},"comandos-docker","Comandos Docker",{"depth":68,"slug":307,"text":308},"parametros-úteis","Parametros úteis",{"depth":68,"slug":310,"text":311},"rodando-coisas-no-docker","Rodando coisas no Docker",{"depth":68,"slug":313,"text":314},"parâmetros-úteis","parâmetros úteis",{"depth":68,"slug":316,"text":317},"bind-mounts","Bind mounts",{"depth":68,"slug":319,"text":320},"como-criar-volumes","Como criar volumes",{"depth":49,"slug":182,"text":183},{"depth":68,"slug":323,"text":324},"todo","#todo",[],[],{"title":292,"pubDate":190,"hero":294,"tags":328},[18,119,152],[],"shards",["Map",332,333,357,358,375,376,403,404,421,422,439,440],"concurrency-is-not-parallelism",{"id":332,"data":334,"body":341,"filePath":342,"digest":343,"rendered":344},{"title":335,"pubDate":336,"tags":337,"video":340},"Concorrência não é paralelismo",["Date","2024-10-14T00:00:00.000Z"],[338,339,128],"concurrency","parallelism","oV9rvDllKEg","### Notas sobre o Vídeo\r\n\r\n- \"O mundo não é orientado a objetos e sim paralelo\"\r\n\r\n- Concorrência é sobre lidar com várias coisas ao mesmo tempo.\r\n- Paralelismo é sobre fazer várias coisas ao mesmo tempo.\r\n- Um é sobre estrutura, o outro sobre execução\r\n\r\n- Concorrência provém uma forma de estruturar a solução para um problema, que pode ou não ser paralelo\r\n  - e.g. Um sistema operacional gerencia para que um mouse um teclado, um monitor, um auto-falante funcione, mesmo que o sistema tenha um ou mais núcleos de processamento, o modelo de programação é concorrente, podendo ou não ser paralelo\r\n- Concorrência é a forma de estruturar o um programa, quebrando ele em partes que podem ser executadas independentemente\r\n\r\n- Acesse os [slides](https://go.dev/talks/2012/waza.slide#6)\r\n\r\n- Dica de leitura: [Communicating Sequencial Processes, Hoare - 1978](https://www.cs.cmu.edu/~crary/819-f09/Hoare78.pdf)\r\n- Comentários sobre a leitura: [Hoare on communicating sequential processes](https://www.youtube.com/watch?v=QUOlyIHmBrM&ab_channel=TuringAwardeeClips)","src/content/shards/concurrency-is-not-parallelism.md","3d3f83440233d0b6",{"html":345,"metadata":346},"\u003Ch3 id=\"notas-sobre-o-vídeo\">Notas sobre o Vídeo\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Cp>“O mundo não é orientado a objetos e sim paralelo”\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Concorrência é sobre lidar com várias coisas ao mesmo tempo.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Paralelismo é sobre fazer várias coisas ao mesmo tempo.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Um é sobre estrutura, o outro sobre execução\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Concorrência provém uma forma de estruturar a solução para um problema, que pode ou não ser paralelo\u003C/p>\n\u003Cul>\n\u003Cli>e.g. Um sistema operacional gerencia para que um mouse um teclado, um monitor, um auto-falante funcione, mesmo que o sistema tenha um ou mais núcleos de processamento, o modelo de programação é concorrente, podendo ou não ser paralelo\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>Concorrência é a forma de estruturar o um programa, quebrando ele em partes que podem ser executadas independentemente\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Acesse os \u003Ca href=\"https://go.dev/talks/2012/waza.slide#6\">slides\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Dica de leitura: \u003Ca href=\"https://www.cs.cmu.edu/~crary/819-f09/Hoare78.pdf\">Communicating Sequencial Processes, Hoare - 1978\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Comentários sobre a leitura: \u003Ca href=\"https://www.youtube.com/watch?v=QUOlyIHmBrM&#x26;ab_channel=TuringAwardeeClips\">Hoare on communicating sequential processes\u003C/a>\u003C/p>\n\u003C/li>\n\u003C/ul>",{"headings":347,"localImagePaths":351,"remoteImagePaths":352,"frontmatter":353,"imagePaths":356},[348],{"depth":68,"slug":349,"text":350},"notas-sobre-o-vídeo","Notas sobre o Vídeo",[],[],{"title":335,"pubDate":354,"tags":355,"video":340},"2024-10-14",[338,339,128],[],"conways-law",{"id":357,"data":359,"body":363,"filePath":364,"digest":365,"rendered":366},{"title":360,"pubDate":361,"tags":362},"Lei de Conway",["Date","2024-10-17T00:00:00.000Z"],[39],"\"Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization's communication structure.\"\r\n\r\n“Qualquer organização que projete um sistema (definido de forma ampla) produzirá um projeto cuja estrutura é uma cópia da estrutura de comunicação da organização.\r\n\r\nVeja mais em: [Conway's law | Martin Fowler](https://martinfowler.com/bliki/ConwaysLaw.html)","src/content/shards/conways-law.md","c6394ed9bb9d5674",{"html":367,"metadata":368},"\u003Cp>“Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization’s communication structure.”\u003C/p>\n\u003Cp>“Qualquer organização que projete um sistema (definido de forma ampla) produzirá um projeto cuja estrutura é uma cópia da estrutura de comunicação da organização.\u003C/p>\n\u003Cp>Veja mais em: \u003Ca href=\"https://martinfowler.com/bliki/ConwaysLaw.html\">Conway’s law | Martin Fowler\u003C/a>\u003C/p>",{"headings":369,"localImagePaths":370,"remoteImagePaths":371,"frontmatter":372,"imagePaths":374},[],[],[],{"title":360,"pubDate":86,"tags":373},[39],[],"paradigms",{"id":375,"data":377,"body":381,"filePath":382,"digest":383,"rendered":384},{"title":378,"pubDate":379,"tags":380},"Paradigmas",["Date","2024-10-08T00:00:00.000Z"],[375],"## O que significa isso?\r\n\r\nPor definição paradigma é uma estrutura mental composta por teorias, experiências, métodos e instrumentos que serve para o pensamento organizar, de determinado modo, a realidade e os seus eventos. É a representação de um padrão a ser seguido.\r\n\r\n### E um paradigma de programação?\r\n\r\nSeguindo a definição da palavra em si, um paradigma de programação nada mais é do que a forma como uma linguagem de programação estrutura suas partes dando ferramentas para que os programadores possam modelar um sistema ou estrutura.\r\nDada a estrutura proposta pelo paradigma, cabe ao utilizador dessa estrutura (no caso programador) que escolha o paradigma que mais se adéque ao problema.\r\n\r\n### Quais paradigmas de programação existem?\r\n\r\nExistem diversos paradigmas, uns mais comuns do que outros e alguns que coexistem dentro de uma mesma linguagem de programação\r\n\r\nOs mais comuns são:\r\n\r\n- Paradigma Funcional\r\n- Paradigma Orientado a Objetos\r\n\r\nOutros não tão comuns nos dias de hoje\r\n\r\n- Paradigma Orientado a Eventos\r\n- Paradigma Imperativo ou procedural\r\n- Paradigma Declarativo\r\n- Paradigma Lógico ou restritivo\r\n\r\nPronto, esta é a ideia básica sobre paradigmas. Vale ressaltar que nem todas as linguagens vão implementar algum paradigma ao pé da letra, por exemplo: Golang não comporta herança, assim não atendendo 100% aos requisitos de uma linguagem orientada a objetos, mas tudo bem.\r\nEm Java, a programação funcional foi criada a partir de uma adaptação da linguagem, não tendo funções de primeira ordem efetivas e sim \"Functional Interfaces\", Java adapta funções de primeira ordem para que sejam classes por debaixo dos panos, e funciona. Melhor que Haskell ou outra linguagem funcional? Talvez, não entre em discussões sobre qual o melhor paradigma de todos simplesmente por comparar, é perda de tempo, tente entender o que é melhor para o que precisa ser resolvido.","src/content/shards/paradigms.md","bcf62907022fc1dd",{"html":385,"metadata":386},"\u003Ch2 id=\"o-que-significa-isso\">O que significa isso?\u003C/h2>\n\u003Cp>Por definição paradigma é uma estrutura mental composta por teorias, experiências, métodos e instrumentos que serve para o pensamento organizar, de determinado modo, a realidade e os seus eventos. É a representação de um padrão a ser seguido.\u003C/p>\n\u003Ch3 id=\"e-um-paradigma-de-programação\">E um paradigma de programação?\u003C/h3>\n\u003Cp>Seguindo a definição da palavra em si, um paradigma de programação nada mais é do que a forma como uma linguagem de programação estrutura suas partes dando ferramentas para que os programadores possam modelar um sistema ou estrutura.\r\nDada a estrutura proposta pelo paradigma, cabe ao utilizador dessa estrutura (no caso programador) que escolha o paradigma que mais se adéque ao problema.\u003C/p>\n\u003Ch3 id=\"quais-paradigmas-de-programação-existem\">Quais paradigmas de programação existem?\u003C/h3>\n\u003Cp>Existem diversos paradigmas, uns mais comuns do que outros e alguns que coexistem dentro de uma mesma linguagem de programação\u003C/p>\n\u003Cp>Os mais comuns são:\u003C/p>\n\u003Cul>\n\u003Cli>Paradigma Funcional\u003C/li>\n\u003Cli>Paradigma Orientado a Objetos\u003C/li>\n\u003C/ul>\n\u003Cp>Outros não tão comuns nos dias de hoje\u003C/p>\n\u003Cul>\n\u003Cli>Paradigma Orientado a Eventos\u003C/li>\n\u003Cli>Paradigma Imperativo ou procedural\u003C/li>\n\u003Cli>Paradigma Declarativo\u003C/li>\n\u003Cli>Paradigma Lógico ou restritivo\u003C/li>\n\u003C/ul>\n\u003Cp>Pronto, esta é a ideia básica sobre paradigmas. Vale ressaltar que nem todas as linguagens vão implementar algum paradigma ao pé da letra, por exemplo: Golang não comporta herança, assim não atendendo 100% aos requisitos de uma linguagem orientada a objetos, mas tudo bem.\r\nEm Java, a programação funcional foi criada a partir de uma adaptação da linguagem, não tendo funções de primeira ordem efetivas e sim “Functional Interfaces”, Java adapta funções de primeira ordem para que sejam classes por debaixo dos panos, e funciona. Melhor que Haskell ou outra linguagem funcional? Talvez, não entre em discussões sobre qual o melhor paradigma de todos simplesmente por comparar, é perda de tempo, tente entender o que é melhor para o que precisa ser resolvido.\u003C/p>",{"headings":387,"localImagePaths":397,"remoteImagePaths":398,"frontmatter":399,"imagePaths":402},[388,391,394],{"depth":49,"slug":389,"text":390},"o-que-significa-isso","O que significa isso?",{"depth":68,"slug":392,"text":393},"e-um-paradigma-de-programação","E um paradigma de programação?",{"depth":68,"slug":395,"text":396},"quais-paradigmas-de-programação-existem","Quais paradigmas de programação existem?",[],[],{"title":378,"pubDate":400,"tags":401},"2024-10-08",[375],[],"tech-glossary",{"id":403,"data":405,"body":409,"filePath":410,"digest":411,"rendered":412},{"title":406,"pubDate":407,"tags":408},"Glossário técnico",["Date","2024-10-17T00:00:00.000Z"],[39],"OK, quem nunca ouviu alguém falar um termo ou sigla que resume bem algo mas você não conhecia?\r\n\r\nPor isso, vamos centralizar alguns aqui e incrementar nosso vocabulário de *buzz words*\r\n\r\n| Termo | Significado                                                                                                                  |\r\n| ----- | ---------------------------------------------------------------------------------------------------------------------------- |\r\n| SPof  | Single point of failure, é aquele componente da aplicação que centraliza muita responsabilidade e pode fazer tudo *crashar*! |","src/content/shards/tech-glossary.md","c0b15c7529703137",{"html":413,"metadata":414},"\u003Cp>OK, quem nunca ouviu alguém falar um termo ou sigla que resume bem algo mas você não conhecia?\u003C/p>\n\u003Cp>Por isso, vamos centralizar alguns aqui e incrementar nosso vocabulário de \u003Cem>buzz words\u003C/em>\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Termo\u003C/th>\u003Cth>Significado\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>SPof\u003C/td>\u003Ctd>Single point of failure, é aquele componente da aplicação que centraliza muita responsabilidade e pode fazer tudo \u003Cem>crashar\u003C/em>!\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>",{"headings":415,"localImagePaths":416,"remoteImagePaths":417,"frontmatter":418,"imagePaths":420},[],[],[],{"title":406,"pubDate":86,"tags":419},[39],[],"twelve-factors",{"id":421,"data":423,"body":427,"filePath":428,"digest":429,"rendered":430},{"title":424,"pubDate":425,"tags":426},"Os Doze Fatores da construção de software",["Date","2024-10-17T00:00:00.000Z"],[39],"I - Base de Código \u003Cbr>\r\nUma base de código com rastreamento utilizando controle de revisão, muitos deploys\r\n\r\nII - Dependências \u003Cbr>\r\nDeclare e isole as dependências\r\n\r\nIII - Configurações \u003Cbr>\r\nArmazene as configurações no ambiente\r\n\r\nIV - Serviços de Apoio \u003Cbr>\r\nTrate os serviços de apoio, como recursos ligados\r\n\r\nV - Construa, lance, execute \u003Cbr>\r\nSepare estritamente os builds e execute em estágios\r\n\r\nVI - Processos \u003Cbr>\r\nExecute a aplicação como um ou mais processos que não armazenam estado\r\n\r\nVII - Vínculo de porta \u003Cbr>\r\nExporte serviços por ligação de porta\r\n\r\nVIII - Concorrência \u003Cbr>\r\nDimensione por um modelo de processo\r\n\r\nIX - Descartabilidade \u003Cbr>\r\nMaximizar a robustez com inicialização e desligamento rápido\r\n\r\nX - Dev/prod semelhantes \u003Cbr>\r\nMantenha o desenvolvimento, teste, produção o mais semelhante possível\r\n\r\nXI - Logs \u003Cbr>\r\nTrate logs como fluxo de eventos\r\n\r\nXII - Processos de Admin \u003Cbr>\r\nExecutar tarefas de administração/gerenciamento como processos pontuais\r\n\r\nVeja mais em: [The Twelve Factor App](twelve-factors)","src/content/shards/twelve-factors.md","582a19b837460356",{"html":431,"metadata":432},"\u003Cp>I - Base de Código \u003Cbr>\r\nUma base de código com rastreamento utilizando controle de revisão, muitos deploys\u003C/p>\n\u003Cp>II - Dependências \u003Cbr>\r\nDeclare e isole as dependências\u003C/p>\n\u003Cp>III - Configurações \u003Cbr>\r\nArmazene as configurações no ambiente\u003C/p>\n\u003Cp>IV - Serviços de Apoio \u003Cbr>\r\nTrate os serviços de apoio, como recursos ligados\u003C/p>\n\u003Cp>V - Construa, lance, execute \u003Cbr>\r\nSepare estritamente os builds e execute em estágios\u003C/p>\n\u003Cp>VI - Processos \u003Cbr>\r\nExecute a aplicação como um ou mais processos que não armazenam estado\u003C/p>\n\u003Cp>VII - Vínculo de porta \u003Cbr>\r\nExporte serviços por ligação de porta\u003C/p>\n\u003Cp>VIII - Concorrência \u003Cbr>\r\nDimensione por um modelo de processo\u003C/p>\n\u003Cp>IX - Descartabilidade \u003Cbr>\r\nMaximizar a robustez com inicialização e desligamento rápido\u003C/p>\n\u003Cp>X - Dev/prod semelhantes \u003Cbr>\r\nMantenha o desenvolvimento, teste, produção o mais semelhante possível\u003C/p>\n\u003Cp>XI - Logs \u003Cbr>\r\nTrate logs como fluxo de eventos\u003C/p>\n\u003Cp>XII - Processos de Admin \u003Cbr>\r\nExecutar tarefas de administração/gerenciamento como processos pontuais\u003C/p>\n\u003Cp>Veja mais em: \u003Ca href=\"twelve-factors\">The Twelve Factor App\u003C/a>\u003C/p>",{"headings":433,"localImagePaths":434,"remoteImagePaths":435,"frontmatter":436,"imagePaths":438},[],[],[],{"title":424,"pubDate":86,"tags":437},[39],[],"function-or-method",{"id":439,"data":441,"body":447,"filePath":448,"digest":449,"rendered":450},{"title":442,"pubDate":443,"tags":444},"Função ou método?",["Date","2024-09-29T00:00:00.000Z"],[445,446],"functions","methods","## Mas qual a diferença?\r\n\r\nA: É, existe uma diferença.\u003Cbr>\r\nB: Mas eu escrevo tudo com *func ou fun ou function*, então é tudo função, certo?\u003Cbr>\r\nA: Sim, e não.\u003Cbr>\r\n\r\nSim, são todas funções, porém funções associadas a um objeto ou classe são chamadas de métodos, eles geralmente processam valores internos daquele objeto ou classe dado que estas funções não poderão ser utilizadas fora daquele objeto, o que chamamos de encapsulamento (um dos pilares da POO)\r\n\r\nExemplo:\r\n\r\n``` java\r\nclass Person {\r\n    String firstName;\r\n    String lastName;\r\n\r\n    // Este é um método, ele está associado ao objeto Person\r\n    String getFullName(){\r\n        return this.firstName + \" \" + this.lastName;\r\n    }\r\n}\r\n\r\nclass Main {\r\n    public static void main(String...args){\r\n        // Criando um objeto\r\n        var person = new Person();\r\n        // Chamando o método do objeto;\r\n        var fullName = person.getFullName();\r\n        // Chamando uma função\r\n        var splittedString = Main.splitString(fullName);\r\n    }\r\n\r\n    // Esta é uma função, ela não está associada a nada\r\n    // portanto pode ser executada com qualquer valor\r\n    static String[] splitString(String source){\r\n        return source.split(\" \");\r\n    }\r\n}\r\n```","src/content/shards/function-or-method.md","36fc69fa3902dcf3",{"html":451,"metadata":452},"\u003Ch2 id=\"mas-qual-a-diferença\">Mas qual a diferença?\u003C/h2>\n\u003Cp>A: É, existe uma diferença.\u003Cbr>\r\nB: Mas eu escrevo tudo com \u003Cem>func ou fun ou function\u003C/em>, então é tudo função, certo?\u003Cbr>\r\nA: Sim, e não.\u003Cbr>\u003C/p>\n\u003Cp>Sim, são todas funções, porém funções associadas a um objeto ou classe são chamadas de métodos, eles geralmente processam valores internos daquele objeto ou classe dado que estas funções não poderão ser utilizadas fora daquele objeto, o que chamamos de encapsulamento (um dos pilares da POO)\u003C/p>\n\u003Cp>Exemplo:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"java\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> Person\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    String firstName;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    String lastName;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Este é um método, ele está associado ao objeto Person\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    String \u003C/span>\u003Cspan style=\"color:#B392F0\">getFullName\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(){\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.firstName \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \" \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.lastName;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> Main\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    public\u003C/span>\u003Cspan style=\"color:#F97583\"> static\u003C/span>\u003Cspan style=\"color:#F97583\"> void\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(String...\u003C/span>\u003Cspan style=\"color:#FFAB70\">args\u003C/span>\u003Cspan style=\"color:#E1E4E8\">){\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Criando um objeto\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> person \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#B392F0\"> Person\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Chamando o método do objeto;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fullName \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> person.\u003C/span>\u003Cspan style=\"color:#B392F0\">getFullName\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Chamando uma função\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> splittedString \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Main.\u003C/span>\u003Cspan style=\"color:#B392F0\">splitString\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(fullName);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Esta é uma função, ela não está associada a nada\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // portanto pode ser executada com qualquer valor\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    static\u003C/span>\u003Cspan style=\"color:#F97583\"> String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[] \u003C/span>\u003Cspan style=\"color:#B392F0\">splitString\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(String \u003C/span>\u003Cspan style=\"color:#FFAB70\">source\u003C/span>\u003Cspan style=\"color:#E1E4E8\">){\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> source.\u003C/span>\u003Cspan style=\"color:#B392F0\">split\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\" \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",{"headings":453,"localImagePaths":457,"remoteImagePaths":458,"frontmatter":459,"imagePaths":462},[454],{"depth":49,"slug":455,"text":456},"mas-qual-a-diferença","Mas qual a diferença?",[],[],{"title":442,"pubDate":460,"tags":461},"2024-09-29",[445,446],[],"voting",["Map",465,466,487,488,502,503,555,556,570,571,603,604,621,622,639,640,657,658],"index",{"id":465,"data":467,"body":470,"filePath":471,"digest":472,"rendered":473},{"title":468,"hero":469},"Voting","/images/voting-logo.svg","## Sobre este projeto\r\n\r\nA ideia deste projeto é criar uma especificação de API para votações que possa ser implementada em diferentes linguagens e frameworks, e se utilizando de diversas técnicas de otimização, boas práticas e ferramentas de infra estrutura. A implementação deverá ser subdividida em 3 versões de API, onde cada versão contém um novo conjunto de recursos conforme descritos no roadmap do projeto.\r\n\r\n## Roadmap de desenvolvimento\r\n\r\n| Funcionalidade | V1  | V2  | V3  |\r\n| -------------- | --- | --- | --- |\r\n| Sessão         | ✔️   | ✔️   | ✔️   |\r\n| Voto           | ✔️   | ✔️   | ✔️   |","src/content/voting/index.md","5e1bbbbf968f00b0",{"html":474,"metadata":475},"\u003Ch2 id=\"sobre-este-projeto\">Sobre este projeto\u003C/h2>\n\u003Cp>A ideia deste projeto é criar uma especificação de API para votações que possa ser implementada em diferentes linguagens e frameworks, e se utilizando de diversas técnicas de otimização, boas práticas e ferramentas de infra estrutura. A implementação deverá ser subdividida em 3 versões de API, onde cada versão contém um novo conjunto de recursos conforme descritos no roadmap do projeto.\u003C/p>\n\u003Ch2 id=\"roadmap-de-desenvolvimento\">Roadmap de desenvolvimento\u003C/h2>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Funcionalidade\u003C/th>\u003Cth>V1\u003C/th>\u003Cth>V2\u003C/th>\u003Cth>V3\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Sessão\u003C/td>\u003Ctd>✔️\u003C/td>\u003Ctd>✔️\u003C/td>\u003Ctd>✔️\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Voto\u003C/td>\u003Ctd>✔️\u003C/td>\u003Ctd>✔️\u003C/td>\u003Ctd>✔️\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>",{"headings":476,"localImagePaths":483,"remoteImagePaths":484,"frontmatter":485,"imagePaths":486},[477,480],{"depth":49,"slug":478,"text":479},"sobre-este-projeto","Sobre este projeto",{"depth":49,"slug":481,"text":482},"roadmap-de-desenvolvimento","Roadmap de desenvolvimento",[],[],{"title":468,"hero":469},[],"specs/openapi",{"id":487,"data":489,"body":491,"filePath":492,"digest":493,"rendered":494},{"title":490},"OpenAPI","Especificação para construção da API em formato OpenAPI (swagger)","src/content/voting/specs/openapi.md","4af3915da4288d9d",{"html":495,"metadata":496},"\u003Cp>Especificação para construção da API em formato OpenAPI (swagger)\u003C/p>",{"headings":497,"localImagePaths":498,"remoteImagePaths":499,"frontmatter":500,"imagePaths":501},[],[],[],{"title":490},[],"specs/version-1",{"id":502,"data":504,"body":506,"filePath":507,"digest":508,"rendered":509},{"title":505},"Versão 1","Especificação para construção da API versão 1\r\n\r\n![Estrutura analítica da versão 1](/images/voting-eap-v1.svg)\r\n\r\n## Sessão\r\n\r\nO usuário ao entrar no sistema, poderá criar uma sessão utilizando as seguintes opções:\r\n\r\n- Tema da votação\r\n- Votos únicos ou múltiplos\r\n- Opções de voto\r\n- Tempo de votação\r\n\r\n### Tema da votação\r\n\r\nO usuário deverá escolher um tema para a votação, que será exibido no topo da página, juntamente com uma descrição que será exibida abaixo do tema.\r\n\r\n- O tema da votação é obrigatório.\r\n- O tema da votação deverá ser uma string de no máximo 50 caracteres.\r\n- A descrição da votação deverá ser uma string de no máximo 150 caracteres.\r\n\r\n### Votos únicos ou múltiplos\r\n\r\nO usuário deverá escolher se a votação será feita por votos únicos ou múltiplos. Ao escolher votos únicos, toda vez que o usuário votar em uma opção, o voto anterior será sobrescrito. Ao escolher votos múltiplos, os votos anteriores serão somados.\r\n\r\n- Ao escolher votos únicos, o usuário deverá se identificar por um email.\r\n- Ao escolher votos múltiplos, o usuário não deverá se identificar.\r\n\r\n### Opções de voto\r\n\r\nO usuário deverá escolher as opções de voto, que serão exibidas como botões na página. O usuário poderá adicionar quantas opções de voto quiser, porém deverá haver no mínimo 2 opções de voto.\r\n\r\n- As opções de voto deverão ser únicas.\r\n- As opções de voto deverão ser strings de no mínimo 1 caracter e máximo 50 caracteres.\r\n\r\n### Tempo de votação\r\n\r\nO usuário deverá escolher o tempo de duração da votação, que será exibido como um contador regressivo na página. Ao final do tempo, a votação será encerrada e o resultado será exibido e nenhum voto adicional será aceito.\r\n\r\n- O tempo de votação deverá ser um valor positivo.\r\n- O tempo mínimo de votação é de 1 minuto.\r\n- O tempo máximo de votação é de 1 semana.\r\n\r\n### Identificação da sessão\r\n\r\nAo criar uma sessão, o usuário receberá um identificador único, que será utilizado para acessar a sessão pelos votantes.\r\n\r\n## Voto\r\n\r\nAo entrar no sistema como votante, para efetuar seu(s) voto(s).\r\n\r\n### Identificação da sessão\r\n\r\nAtravés do idenficador único, o votante poderá acessar a sessão.\r\n\r\n### Identificação do usuário\r\n\r\nCaso a sessão tenha sido criada com votos únicos, o votante deverá se identificar com um email. Caso a sessão tenha sido criada com votos múltiplos, o votante não deverá se identificar.\r\n\r\n### Escolha da opção de voto\r\n\r\nO votante deverá escolher uma opção de voto, que será exibida como botões na página. O votante poderá selecionar somente uma opção de voto.\r\n\r\n### Alteração da opção de voto\r\n\r\nCaso a sessão tenha sido criada com votos únicos, ao votar em uma opção, o voto anterior será sobrescrito. Caso a sessão tenha sido criada com votos múltiplos, ao votar em uma opção, o voto anterior será somado.\r\n\r\n## Resultado da sessão\r\n\r\nAo final do tempo de votação, a sessão será encerrada e o resultado será exibido.\r\n\r\n- O resultado deverá ser exibido em ordem decrescente de votos.\r\n- O resultado deverá ser exibido em porcentagem e em total de votos.\r\n\r\n## Sequência de eventos\r\n\r\n![Sequência de eventos da versão 1](/images/voting-sequence-v1.svg)","src/content/voting/specs/version-1.md","b35a079a22e61347",{"html":510,"metadata":511},"\u003Cp>Especificação para construção da API versão 1\u003C/p>\n\u003Cp>\u003Cimg src=\"/images/voting-eap-v1.svg\" alt=\"Estrutura analítica da versão 1\">\u003C/p>\n\u003Ch2 id=\"sessão\">Sessão\u003C/h2>\n\u003Cp>O usuário ao entrar no sistema, poderá criar uma sessão utilizando as seguintes opções:\u003C/p>\n\u003Cul>\n\u003Cli>Tema da votação\u003C/li>\n\u003Cli>Votos únicos ou múltiplos\u003C/li>\n\u003Cli>Opções de voto\u003C/li>\n\u003Cli>Tempo de votação\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"tema-da-votação\">Tema da votação\u003C/h3>\n\u003Cp>O usuário deverá escolher um tema para a votação, que será exibido no topo da página, juntamente com uma descrição que será exibida abaixo do tema.\u003C/p>\n\u003Cul>\n\u003Cli>O tema da votação é obrigatório.\u003C/li>\n\u003Cli>O tema da votação deverá ser uma string de no máximo 50 caracteres.\u003C/li>\n\u003Cli>A descrição da votação deverá ser uma string de no máximo 150 caracteres.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"votos-únicos-ou-múltiplos\">Votos únicos ou múltiplos\u003C/h3>\n\u003Cp>O usuário deverá escolher se a votação será feita por votos únicos ou múltiplos. Ao escolher votos únicos, toda vez que o usuário votar em uma opção, o voto anterior será sobrescrito. Ao escolher votos múltiplos, os votos anteriores serão somados.\u003C/p>\n\u003Cul>\n\u003Cli>Ao escolher votos únicos, o usuário deverá se identificar por um email.\u003C/li>\n\u003Cli>Ao escolher votos múltiplos, o usuário não deverá se identificar.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"opções-de-voto\">Opções de voto\u003C/h3>\n\u003Cp>O usuário deverá escolher as opções de voto, que serão exibidas como botões na página. O usuário poderá adicionar quantas opções de voto quiser, porém deverá haver no mínimo 2 opções de voto.\u003C/p>\n\u003Cul>\n\u003Cli>As opções de voto deverão ser únicas.\u003C/li>\n\u003Cli>As opções de voto deverão ser strings de no mínimo 1 caracter e máximo 50 caracteres.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"tempo-de-votação\">Tempo de votação\u003C/h3>\n\u003Cp>O usuário deverá escolher o tempo de duração da votação, que será exibido como um contador regressivo na página. Ao final do tempo, a votação será encerrada e o resultado será exibido e nenhum voto adicional será aceito.\u003C/p>\n\u003Cul>\n\u003Cli>O tempo de votação deverá ser um valor positivo.\u003C/li>\n\u003Cli>O tempo mínimo de votação é de 1 minuto.\u003C/li>\n\u003Cli>O tempo máximo de votação é de 1 semana.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"identificação-da-sessão\">Identificação da sessão\u003C/h3>\n\u003Cp>Ao criar uma sessão, o usuário receberá um identificador único, que será utilizado para acessar a sessão pelos votantes.\u003C/p>\n\u003Ch2 id=\"voto\">Voto\u003C/h2>\n\u003Cp>Ao entrar no sistema como votante, para efetuar seu(s) voto(s).\u003C/p>\n\u003Ch3 id=\"identificação-da-sessão-1\">Identificação da sessão\u003C/h3>\n\u003Cp>Através do idenficador único, o votante poderá acessar a sessão.\u003C/p>\n\u003Ch3 id=\"identificação-do-usuário\">Identificação do usuário\u003C/h3>\n\u003Cp>Caso a sessão tenha sido criada com votos únicos, o votante deverá se identificar com um email. Caso a sessão tenha sido criada com votos múltiplos, o votante não deverá se identificar.\u003C/p>\n\u003Ch3 id=\"escolha-da-opção-de-voto\">Escolha da opção de voto\u003C/h3>\n\u003Cp>O votante deverá escolher uma opção de voto, que será exibida como botões na página. O votante poderá selecionar somente uma opção de voto.\u003C/p>\n\u003Ch3 id=\"alteração-da-opção-de-voto\">Alteração da opção de voto\u003C/h3>\n\u003Cp>Caso a sessão tenha sido criada com votos únicos, ao votar em uma opção, o voto anterior será sobrescrito. Caso a sessão tenha sido criada com votos múltiplos, ao votar em uma opção, o voto anterior será somado.\u003C/p>\n\u003Ch2 id=\"resultado-da-sessão\">Resultado da sessão\u003C/h2>\n\u003Cp>Ao final do tempo de votação, a sessão será encerrada e o resultado será exibido.\u003C/p>\n\u003Cul>\n\u003Cli>O resultado deverá ser exibido em ordem decrescente de votos.\u003C/li>\n\u003Cli>O resultado deverá ser exibido em porcentagem e em total de votos.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"sequência-de-eventos\">Sequência de eventos\u003C/h2>\n\u003Cp>\u003Cimg src=\"/images/voting-sequence-v1.svg\" alt=\"Sequência de eventos da versão 1\">\u003C/p>",{"headings":512,"localImagePaths":551,"remoteImagePaths":552,"frontmatter":553,"imagePaths":554},[513,516,519,522,525,528,531,534,536,539,542,545,548],{"depth":49,"slug":514,"text":515},"sessão","Sessão",{"depth":68,"slug":517,"text":518},"tema-da-votação","Tema da votação",{"depth":68,"slug":520,"text":521},"votos-únicos-ou-múltiplos","Votos únicos ou múltiplos",{"depth":68,"slug":523,"text":524},"opções-de-voto","Opções de voto",{"depth":68,"slug":526,"text":527},"tempo-de-votação","Tempo de votação",{"depth":68,"slug":529,"text":530},"identificação-da-sessão","Identificação da sessão",{"depth":49,"slug":532,"text":533},"voto","Voto",{"depth":68,"slug":535,"text":530},"identificação-da-sessão-1",{"depth":68,"slug":537,"text":538},"identificação-do-usuário","Identificação do usuário",{"depth":68,"slug":540,"text":541},"escolha-da-opção-de-voto","Escolha da opção de voto",{"depth":68,"slug":543,"text":544},"alteração-da-opção-de-voto","Alteração da opção de voto",{"depth":49,"slug":546,"text":547},"resultado-da-sessão","Resultado da sessão",{"depth":49,"slug":549,"text":550},"sequência-de-eventos","Sequência de eventos",[],[],{"title":505},[],"specs/version-2",{"id":555,"data":557,"body":559,"filePath":560,"digest":561,"rendered":562},{"title":558},"Versão 2","Especificação para construção da API versão 2","src/content/voting/specs/version-2.md","673a667f69ae0751",{"html":563,"metadata":564},"\u003Cp>Especificação para construção da API versão 2\u003C/p>",{"headings":565,"localImagePaths":566,"remoteImagePaths":567,"frontmatter":568,"imagePaths":569},[],[],[],{"title":558},[],"specs/version-3",{"id":570,"data":572,"body":574,"filePath":575,"digest":576,"rendered":577},{"title":573},"Versão 3","Especificação para construção da API versão 3\r\n\r\n## Configuração da sessão\r\n\r\nPara configurar uma sessão, é necessário escolher um _tipo de voto_ e um _modo de votação_, pesos e critérios de desempate personalizados podem ser configurados, se necessário.\r\n\r\n---\r\n\r\n## Tipos de Voto\r\n\r\nPossíveis tipos de votos a serem aplicados em determinadas sessões de votação, esses tipos não podem ser mesclados ou alterados após o início da sessão.\r\n\r\n- Voto binário:\r\n\r\n  - Um voto simples que só permite responder _Sim_ ou _Não_.\r\n\r\n- Voto nota:\r\n\r\n  - Consiste na aplicação de uma nota de _1 a 5_.\r\n\r\n- Voto Enumerado:\r\n  - Consiste em escolher uma opção entre um dos _valores personalizados pré-determinados_.\r\n\r\n---\r\n\r\n## Modos de Voto\r\n\r\nos tipos de votos listados acima podem ser aplicados aos seguintes modos.\r\n\r\n### Modo de votação simples\r\n\r\n- Neste modo, você só pode escolher uma opção para cada pergunta e os pesos são aplicáveis (simples assim).\r\n\r\n### Modo de classificação\r\n\r\n- Este modo de votação consiste em vários itens de votação para serem votados sobre um assunto, para consolidar e formar um resultado de classificação. Se desejar, pesos e critérios de desempate podem ser configurados para este modo.\r\n\r\n---\r\n\r\n## Pesos\r\n\r\n- Para sessões de votação que utilizam o modo de ranking, podem ser aplicados pesos personalizados para cada item de votação, esses pesos serão um valor percentual adicional adicionado ao peso do item, esses valores devem ser de 0 (padrão) a 100 e serão aplicados a cada tipo da seguinte forma:\r\n\r\n_Para uma melhor compreensão, usaremos o valor 50 como valor de peso, esse valor significa que o valor real a ser calculado será de 150%, 50% maior que o valor padrão._","src/content/voting/specs/version-3.md","95b15bfc9709cea7",{"html":578,"metadata":579},"\u003Cp>Especificação para construção da API versão 3\u003C/p>\n\u003Ch2 id=\"configuração-da-sessão\">Configuração da sessão\u003C/h2>\n\u003Cp>Para configurar uma sessão, é necessário escolher um \u003Cem>tipo de voto\u003C/em> e um \u003Cem>modo de votação\u003C/em>, pesos e critérios de desempate personalizados podem ser configurados, se necessário.\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"tipos-de-voto\">Tipos de Voto\u003C/h2>\n\u003Cp>Possíveis tipos de votos a serem aplicados em determinadas sessões de votação, esses tipos não podem ser mesclados ou alterados após o início da sessão.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Voto binário:\u003C/p>\n\u003Cul>\n\u003Cli>Um voto simples que só permite responder \u003Cem>Sim\u003C/em> ou \u003Cem>Não\u003C/em>.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>Voto nota:\u003C/p>\n\u003Cul>\n\u003Cli>Consiste na aplicação de uma nota de \u003Cem>1 a 5\u003C/em>.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>Voto Enumerado:\u003C/p>\n\u003Cul>\n\u003Cli>Consiste em escolher uma opção entre um dos \u003Cem>valores personalizados pré-determinados\u003C/em>.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"modos-de-voto\">Modos de Voto\u003C/h2>\n\u003Cp>os tipos de votos listados acima podem ser aplicados aos seguintes modos.\u003C/p>\n\u003Ch3 id=\"modo-de-votação-simples\">Modo de votação simples\u003C/h3>\n\u003Cul>\n\u003Cli>Neste modo, você só pode escolher uma opção para cada pergunta e os pesos são aplicáveis (simples assim).\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"modo-de-classificação\">Modo de classificação\u003C/h3>\n\u003Cul>\n\u003Cli>Este modo de votação consiste em vários itens de votação para serem votados sobre um assunto, para consolidar e formar um resultado de classificação. Se desejar, pesos e critérios de desempate podem ser configurados para este modo.\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"pesos\">Pesos\u003C/h2>\n\u003Cul>\n\u003Cli>Para sessões de votação que utilizam o modo de ranking, podem ser aplicados pesos personalizados para cada item de votação, esses pesos serão um valor percentual adicional adicionado ao peso do item, esses valores devem ser de 0 (padrão) a 100 e serão aplicados a cada tipo da seguinte forma:\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cem>Para uma melhor compreensão, usaremos o valor 50 como valor de peso, esse valor significa que o valor real a ser calculado será de 150%, 50% maior que o valor padrão.\u003C/em>\u003C/p>",{"headings":580,"localImagePaths":599,"remoteImagePaths":600,"frontmatter":601,"imagePaths":602},[581,584,587,590,593,596],{"depth":49,"slug":582,"text":583},"configuração-da-sessão","Configuração da sessão",{"depth":49,"slug":585,"text":586},"tipos-de-voto","Tipos de Voto",{"depth":49,"slug":588,"text":589},"modos-de-voto","Modos de Voto",{"depth":68,"slug":591,"text":592},"modo-de-votação-simples","Modo de votação simples",{"depth":68,"slug":594,"text":595},"modo-de-classificação","Modo de classificação",{"depth":49,"slug":597,"text":598},"pesos","Pesos",[],[],{"title":573},[],"tools/errors",{"id":603,"data":605,"body":607,"filePath":608,"digest":609,"rendered":610},{"title":606},"Códigos de erro","Ferramentais adicionais para construção do projeto\r\n\r\n## Tabela de Erros internos\r\n\r\n| Código | Descrição                      |\r\n| ------ | ------------------------------ |\r\n| 001    | Sessão de votação encerrada    |\r\n| 002    | Sessão de votação em andamento |","src/content/voting/tools/errors.md","76246abf4248ab68",{"html":611,"metadata":612},"\u003Cp>Ferramentais adicionais para construção do projeto\u003C/p>\n\u003Ch2 id=\"tabela-de-erros-internos\">Tabela de Erros internos\u003C/h2>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Código\u003C/th>\u003Cth>Descrição\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>001\u003C/td>\u003Ctd>Sessão de votação encerrada\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>002\u003C/td>\u003Ctd>Sessão de votação em andamento\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>",{"headings":613,"localImagePaths":617,"remoteImagePaths":618,"frontmatter":619,"imagePaths":620},[614],{"depth":49,"slug":615,"text":616},"tabela-de-erros-internos","Tabela de Erros internos",[],[],{"title":606},[],"tools/mobile",{"id":621,"data":623,"body":625,"filePath":626,"digest":627,"rendered":628},{"title":624},"App Mobile","## Mobile\r\n\r\nApp base para execução e testes do projeto","src/content/voting/tools/mobile.md","ae18311ad0355f31",{"html":629,"metadata":630},"\u003Ch2 id=\"mobile\">Mobile\u003C/h2>\n\u003Cp>App base para execução e testes do projeto\u003C/p>",{"headings":631,"localImagePaths":635,"remoteImagePaths":636,"frontmatter":637,"imagePaths":638},[632],{"depth":49,"slug":633,"text":634},"mobile","Mobile",[],[],{"title":624},[],"tools/site",{"id":639,"data":641,"body":643,"filePath":644,"digest":645,"rendered":646},{"title":642},"Web Site","## Site\r\n\r\nSite base para execução e testes do projeto","src/content/voting/tools/site.md","caddcf8ae2383ebe",{"html":647,"metadata":648},"\u003Ch2 id=\"site\">Site\u003C/h2>\n\u003Cp>Site base para execução e testes do projeto\u003C/p>",{"headings":649,"localImagePaths":653,"remoteImagePaths":654,"frontmatter":655,"imagePaths":656},[650],{"depth":49,"slug":651,"text":652},"site","Site",[],[],{"title":642},[],"tools/testing",{"id":657,"data":659,"body":661,"filePath":662,"digest":663,"rendered":664},{"title":660},"Testes","Ferramentais adicionais para construção do projeto","src/content/voting/tools/testing.md","9aeae8e136a8432e",{"html":665,"metadata":666},"\u003Cp>Ferramentais adicionais para construção do projeto\u003C/p>",{"headings":667,"localImagePaths":668,"remoteImagePaths":669,"frontmatter":670,"imagePaths":671},[],[],[],{"title":660},[]]